;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      LINSPACE
;*
;* PURPOSE:
;*      GENERATE LINEARLY SPACED VECTOR
;*
;* CALLING SEQUENCE:
;*      LINSPACE, BOL, TOL, STEPNB=N, INC=X
;*
;* INPUTS:
;*      BOL = BOTTOM LIMIT/START OF THE LINEARLY SPACED VECTOR
;*      TOL = TOP LIMIT/END OF THE LINEARLY SPACED VECTOR
;
;* KEYWORDS:
;*      STEPNB = STEP NUMBER, STEP INCREMENT IS CALCULATED
;*      INC = STEP INCREMENT, STEP NUMBER IS CALCULATED
;*
;* OUTPUTS:
;*      VECTOR  - A LINEARLY SPACED VECTOR
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      29 NOV 2013 - PML / MAGELLIUM - CREATION
;*
;* VALIDATION HISTORY:
;*      17 APR 2014 - PML / MAGELLIUM   - WINDOWS 64-BIT MACHINE IDL 8.2.3 : COMPILATION AND CALLING SUCCESSFUL
;*      20 JAN 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL 
;*      30 MAR 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL (DIMITRI V4.0) 
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION LINSPACE, A, B, STEPNB=N, INC=X

  ; ABSOLUTE INPUT DIFFERENCE
  DELTA = ABS(B-A)  
  ; SET BOTTOM LIMIT
  BOL = MIN([A,B])
  ; CASE A=B   
  IF DELTA EQ 0 THEN BEGIN 
    RETURN, A 
  ENDIF
  
  IF KEYWORD_SET(X) THEN BEGIN
    ; CASE INPUT IS INCREMENT NUMBER
    IF DELTA LE X THEN BEGIN
      RETURN, [BOL, BOL+X] ; FORCE UPPER LIMIT TO BOL+X IF DELTA < INC
    ENDIF
    N=ROUND((DELTA)/X)
  ENDIF ELSE BEGIN 
    IF KEYWORD_SET(N) THEN BEGIN
        ; CASE INPUT IS STEP NUMBER
        N=ROUND(N)
    ENDIF ELSE BEGIN 
        N=ROUND(DELTA)
    ENDELSE
  ENDELSE
  IF N LT 1 THEN RETURN, BOL
  ; CREATE LINSPACE VECTOR
  SPACE = FINDGEN(N+1) / N * (DELTA) + BOL
  RETURN, SPACE

END