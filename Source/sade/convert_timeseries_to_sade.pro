;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      CONVERT_TIMESERIES_TO_SADE       
;* 
;* PURPOSE:
;*      CONVERTS DIMITRI TOA ARRAY TO SADE OUTPUT
;* 
;* CALLING SEQUENCE:
;*      CONVERT_TIMESERIES_TO_SADE,SENSOR,PROC_VER,SENSOR_DATA,NUMPIXS,BANDS_INDEX,SITE,PRODNAMES,PFLAG
;* 
;* INPUTS:
;*      SENSOR      - THE SENSOR NAME
;*      PROC_VER    - THE SENSORS PROCESSING VERSION
;*      SENSOR_DATA - THE DMITRI TOA REF ARRAY
;*      NUMPIXS     - AN ARRAY OF THE NUMBER OF PIXELS
;*      BANDS_INDEX - A INT ARRAY OF THE BAND ORDERING
;*      SITE        - THE SITE NAME
;*      PRODNAMES   - AN ARRAY OF THE PRODUCT NAMES
;*      PFLAG       - A FLAG INDICATING IF PARASOL IS THE SENSOR
;*
;* KEYWORDS:
;*
;* OUTPUTS:
;*      A SADE EXTRACTION FILE
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      16 DEC 2011 - C KENT  - INITIAL DIMITRI VERSION
;*
;* VALIDATION HISTORY:
;*
;**************************************************************************************
;**************************************************************************************

PRO CONVERT_TIMESERIES_TO_SADE,SENSOR,PROC_VER,SENSOR_DATA,NUMPIXS,BANDS_INDEX,SITE,PRODNAMES,PFLAG

  FT = GET_DIMITRI_LOCATION('SITE_DATA')
  ICOORDS = GET_SITE_COORDINATES(SITE,FT)

;-----------------------------
; DEFINE OUTPUT FILE - MAKE SURE YOU ARE IN CORRECT CD

  RDIFOL = GET_DIMITRI_LOCATION('INPUT')
  RDOFOL = '/mnt/Projects/MEREMSII/WG_Reference_Dataset_2/ptest/'
  DL = PATH_SEP()
  OUTPUTFILE = RDOFOL+SITE+DL+SITE+'_'+SENSOR+'_'+PROC_VER+'.SADE'
  OPENW,OUTF,OUTPUTFILE,/GET_LUN

  JPGFOL = RDOFOL+SITE+DL+SENSOR
  IF FILE_TEST(JPGFOL) EQ 0 THEN FILE_MKDIR,JPGFOL

;------------------------------
; GET SITE LAT AND LON FROM ICOORDS 

  SITE_LAT = MEAN(ICOORDS[0:1])
  SITE_LON = MEAN(ICOORDS[2:3])

;------------------------------
; ASSUME IF THERE ARE MULTIPLE DIRECTIONS THAT THE OBSERVATIONS ARE NEXT TO EACH OTHER
; GET NUMBER OF INDIVICUAL OBSERVATIONS (NUM VALUES DIVIDED BY DIRECTIONS)

  NOVAL     = -999.
  NUMNONREF = 5+12
  NOBSERS = N_ELEMENTS(SENSOR_DATA[0,*])
  NBANDS    = N_ELEMENTS(BANDS_INDEX)
  VZAID = 1
  VAAID = 2
  SZAID = 3
  SAAID = 4
  
  wvapid = 15
  ozonid = 5
  spssid = 7
  windid1 = 11 
  windid2 = 13 
  

  IF PFLAG THEN BEGIN

    UPRDS = PRODNAMES[UNIQ(PRODNAMES,SORT(PRODNAMES))]
    PARAVZA = MAKE_ARRAY(N_ELEMENTS(BANDS_INDEX),16,N_ELEMENTS(UPRDS),/FLOAT,VALUE=-999.)
    PARAVAA = MAKE_ARRAY(N_ELEMENTS(BANDS_INDEX),16,N_ELEMENTS(UPRDS),/FLOAT,VALUE=-999.)
    
    FOR IPRD=0l,N_ELEMENTS(UPRDS)-1 DO BEGIN
      PRINT, 'PRODUCT ', IPRD, ' OF' ,N_ELEMENTS(UPRDS)
      ANGLES = GET_PARASOL_VIEWING_GEOMETRIES(UPRDS[IPRD],ICOORDS,SITE)
      PARAVZA[*,*,IPRD] = ANGLES[*,*,0]
      PARAVAA[*,*,IPRD] = ANGLES[*,*,1]
    ENDFOR
  ENDIF

;------------------------------
; LOOP OVER EACH IND OBS
  
  ;DIRCOUNT=0L
  FOR II=0L,NOBSERS-1 DO BEGIN;,NUM_DIRECTIONS DO BEGIN

;------------------------------
; CONVERT TIME FROM DECIMAL TO DD/MM/YYYY-HH:MM:SS, AND TODAYS DATE AS THE PROCESSING TIME STRING
  
    ACQ_TIME    = SENSOR_DATA[0,II]
    IF FLOOR(ACQ_TIME) MOD 4 EQ 0 THEN DIY=366 ELSE DIY=365
    TTIME = DIY*(ACQ_TIME-FLOOR(ACQ_TIME))+DOUBLE(JULDAY(1, 0, FLOOR(ACQ_TIME), 0, 0, 0))
    CALDAT,TTIME,MONTH,DAY,YEAR,HOUR,MINUTE,SECOND

    MONTH       = MONTH LT 10. ?  '0'+STRTRIM(STRING(MONTH,FORMAT='(I)'),2) : STRTRIM(STRING(MONTH,FORMAT='(I)'),2)
    DAY         = DAY LT 10. ? '0'+STRTRIM(STRING(DAY,FORMAT='(I)'),2) : STRTRIM(STRING(DAY,FORMAT='(I)'),2)
    YEAR        = STRTRIM(STRING(YEAR,FORMAT='(I)'),2)
    HOUR        = HOUR LT 10. ? '0'+STRTRIM(STRING(HOUR,FORMAT='(I)'),2) : STRTRIM(STRING(HOUR,FORMAT='(I)'),2)
    MINUTE      = MINUTE LT 10. ? '0'+STRTRIM(STRING(MINUTE,FORMAT='(I)'),2) : STRTRIM(STRING(MINUTE,FORMAT='(I)'),2)
    SECOND      = SECOND LT 10. ? '0'+STRTRIM(STRING(SECOND,FORMAT='(I)'),2) : STRTRIM(STRING(SECOND,FORMAT='(I)'),2)
    
    ACQ_STRING  = DAY+'/'+MONTH+'/'+YEAR+'-'+HOUR+':'+MINUTE+':'+SECOND
    PROC_STRING = ACQ_STRING;FOR NOW

;------------------------------
; GET TOA REFLECTANCE, STDEV AND VZA AND VAA

    TOA_REF = SENSOR_DATA[NUMNONREF+BANDS_INDEX,II]
    IF SENSOR EQ 'MODISA' THEN TBAND=22 ELSE TBAND=NBANDS
    TOA_STD = SENSOR_DATA[NUMNONREF+TBAND+BANDS_INDEX,II]
   
    VZA = MAKE_ARRAY(NBANDS,/FLOAT,VALUE=SENSOR_DATA[VZAID,II])
    VAA = MAKE_ARRAY(NBANDS,/FLOAT,VALUE=SENSOR_DATA[VAAID,II])
    
;ADD EXCEPTION FOR PARASOL VIEWING GEOMETRY RECALCULATION
    IF PFLAG EQ 1 THEN BEGIN

      PRDID = WHERE(UPRDS EQ PRODNAMES[II])
      PRDID = PRDID[0]
      TVZA  = REFORM(PARAVZA[3,*,PRDID],16)
      TEMP  = ABS(TVZA-SENSOR_DATA[VZAID,II])
      P1    = MIN(TEMP)
      DIRID = WHERE(ABS(TEMP-P1) LT 0.00001)
      DIRID = DIRID[0]
   
      VZA[*] = PARAVZA[*,DIRID,PRDID]
      VAA[*] = PARAVAA[*,DIRID,PRDID]

    ENDIF
         
    RES = WHERE(TOA_REF LE 0. or finite(toa_ref) eq 0,COUNT)
    IF COUNT GT 0 THEN TOA_REF[RES] = NOVAL
    RES = WHERE(TOA_STD LE 0. or finite(toa_ref) eq 0,COUNT)
    IF COUNT GT 0 THEN TOA_STD[RES] = NOVAL
    
;------------------------------
; GET SZA AND SAA AND NUMBER OF PIXELS

    PIX = NUMPIXS[II]
    SZA = SENSOR_DATA[SZAID,II]
    SAA = SENSOR_DATA[SAAID,II]

    WVAP  = SENSOR_DATA[WVAPID,II] GT 0. ? SENSOR_DATA[WVAPID,II] : NOVAL
    OZONE = SENSOR_DATA[OZONID,II] GT 0. ? SENSOR_DATA[OZONID,II]/1000. : NOVAL
    PRESS = SENSOR_DATA[SPSSID,II] GT 0. ? SENSOR_DATA[SPSSID,II] : NOVAL
    WIND1 = SENSOR_DATA[WINDID1,II] GT -50. ? SENSOR_DATA[WINDID1,II] : NOVAL
    WIND2 = SENSOR_DATA[WINDID2,II] GT -50. ? SENSOR_DATA[WINDID2,II] : NOVAL
    if WIND1 eq noval then wind = noval else WIND  = SQRT((WIND1^2)*(WIND2^2)) 

;------------------------------
; COPY QUICKLOOKS TO AN OUTPUT FOLDER

    QL_FOLDER = RDIFOL+'Site_'+SITE+DL+SENSOR+DL+'Proc_'+PROC_VER+DL+YEAR+DL
    TMP       = STRLEN(PRODNAMES[II])
    JPG_FILE  = FILE_SEARCH(QL_FOLDER,STRING(STRMID(PRODNAMES[II],0,TMP-4)+'*.jpg'))
    IF SENSOR EQ 'VEGETATION' THEN BEGIN
      TT = STRSPLIT(PRODNAMES[II],'_',/EXTRACT,/PRESERVE_NULL)
      QLFOLDER = QL_FOLDER+STRJOIN(TT[0:N_ELEMENTS(TT)-4],'_')+DL+'0001'+DL
      JPG_FILE  = FILE_SEARCH(QLFOLDER,'*QUICKLOOK.jpg')
    ENDIF
    IF JPG_FILE[0] EQ '' THEN BEGIN
      PRINT, 'MISSING QUICKLOOK:',PRODNAMES[II]
    ENDIF ELSE BEGIN
      FILE_COPY,JPG_FILE[0],JPGFOL+DL+STRING(PRODNAMES[II]+'.jpg'),/OVERWRITE
  
;------------------------------
; PRINT ALL DATA AS AN INDIVIDUAL LINE, SPACE DELIMITED, TO THE OUTPUTFILE
  
      PRINTF,OUTF,STRING(SENSOR+'_'+PROC_VER),ACQ_STRING,PROC_STRING,SITE,TOA_REF,TOA_STD,$
        VZA,VAA,PIX,SITE_LAT,SITE_LON,SZA,SAA,wvap,ozone,press,wind,STRING(PRODNAMES[II]+'.jpg'),$
        FORMAT = '(4(A,1H ),'+STRTRIM(FIX(4*NBANDS),2)+'(F11.6,1H ),1(I10,1H ),2(F10.3,1H ),6(F12.6,1H ),1(A))'
  
    ENDELSE
  ENDFOR

;------------------------------
; CLOSE THE OUTPUT FILE

  FREE_LUN,OUTF

;------------------------------
; PRINT END STRING

  PRINT, 'COMPLETED SADE CONVERSION'

END