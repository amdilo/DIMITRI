;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GET_SENSOR_BAND_INFO    
;* 
;* PURPOSE:
;*      RETURNS THE WAVELENGTH LIST OF THE SENSOR
;* 
;* CALLING SEQUENCE:
;*      RES = GET_SENSOR_BAND_INFO(BN_SENSOR)      
;* 
;* INPUTS:
;*      BN_SENSOR    - A STRING OF THE SENSOR NAME (E.G. 'MERIS')
;*
;* KEYWORDS:
;*      VERBOSE   - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      BAND_CONFIG_STRUCT - A STRUCTURE CONFIGURATION FIELDS
;*                                - NB_BANDS : NUMBER OF BAND 
;*                                - BAND_ID : BAND IDS
;*                                - BAND_LABEL_STD : STANDARD BAND LABELS (E.G. 'BLUE'/'GREEN'/'NIR'/'VISR'/'SWIR'/'SWIR2')
;*                                - BAND_WAVELENGTH : BAND WAVELENGTH CENTRAL VALUES
;*                                
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      17 OCT 2014 - NCG / MAGELLIUM   - DIMITRI-3 MAG
;*      20 FEB 2015 - NCG / MAGELLIUM   - DIMITRI V4.0 
;*
;* VALIDATION HISTORY:
;*      20 JAN 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL 
;*      30 MAR 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL (DIMITRI V4.0) 
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GET_SENSOR_BAND_INFO,BN_SENSOR, VERBOSE=VERBOSE

  STATUS_ERROR = GET_DIMITRI_LOCATION('STATUS_ERROR')

;------------------------------------
; DEFINE SENSOR FILE
  
  SBI_FILE = GET_DIMITRI_LOCATION('BAND_CONFIG')
  RES = FILE_INFO(SBI_FILE)
  IF RES.EXISTS EQ 0 THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'GET_SENSOR_BAND_INFO: ERROR, SENSOR INFORMATION FILE NOT FOUND'
    RETURN, STATUS_ERROR
  ENDIF

;------------------------------------
; RETRIEVE TEMPLATE AND READ DATA FILE  
  
  CONFIG_TEMPLATE = GET_SENSOR_BAND_CONFIG_TEMPLATE()
  CONFIG_DATA = READ_ASCII(SBI_FILE,TEMPLATE=CONFIG_TEMPLATE)


  INDX_BANDID = WHERE(STRCMP(CONFIG_TEMPLATE.FIELDNAMES,'BAND_ID',/FOLD_CASE) EQ 1)
  IF INDX_BANDID[0] EQ -1 OR N_ELEMENTS(INDX_BANDID) GT 1 THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'GET_SENSOR_BAND_INFO: ERROR, SENSOR INDEX RETRIEVAL'
    RETURN, STATUS_ERROR
  ENDIF
  BAND_ID = CONFIG_DATA.(INDX_BANDID)
  
;------------------------------------
; FIND INDEX OF INPUT SENSOR
  INDX_SENSOR = WHERE(STRCMP(CONFIG_TEMPLATE.FIELDNAMES,BN_SENSOR,/FOLD_CASE) EQ 1)
  IF INDX_SENSOR[0] EQ -1 OR N_ELEMENTS(INDX_SENSOR) GT 1 THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'GET_SENSOR_BAND_INFO: ERROR, SENSOR INDEX RETRIEVAL'
    RETURN, STATUS_ERROR 
  ENDIF
  SENSOR_BANDS = CONFIG_DATA.(INDX_SENSOR)

; FIND SENSOR STANDARD LABEL
  INDX_SENSOR_LABEL = WHERE(STRCMP(CONFIG_TEMPLATE.FIELDNAMES,BN_SENSOR+'_STD_LABEL',/FOLD_CASE) EQ 1)
  IF INDX_SENSOR_LABEL[0] EQ -1 OR N_ELEMENTS(INDX_SENSOR_LABEL) GT 1 THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'GET_SENSOR_BAND_INFO: ERROR, SENSOR STD LABEL RETRIEVAL'
    RETURN, STATUS_ERROR
  ENDIF
  SENSOR_LABEL = CONFIG_DATA.(INDX_SENSOR_LABEL)

; FIND SENSOR NCDF LABEL
  INDX_SENSOR_REF_LABEL = WHERE(STRCMP(CONFIG_TEMPLATE.FIELDNAMES,BN_SENSOR+'_REF_LABEL',/FOLD_CASE) EQ 1)
  IF INDX_SENSOR_REF_LABEL[0] EQ -1 OR N_ELEMENTS(INDX_SENSOR_REF_LABEL) GT 1 THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'GET_SENSOR_BAND_INFO: ERROR, SENSOR NCDF LABEL RETRIEVAL'
    RETURN, STATUS_ERROR
  ENDIF
  SENSOR_REF_LABEL = CONFIG_DATA.(INDX_SENSOR_REF_LABEL)

  ; RETRIEVE ONLY VALID WAVELENGTH VALUES 
  INDX_LINE = WHERE(SENSOR_BANDS NE -2)
  IF INDX_LINE[0] EQ -1 THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'GET_SENSOR_BAND_INFO: NO VALID WAVELENGTH FOUND'
    RETURN, STATUS_ERROR
  ENDIF

  ; RETURN THE SENSOR CONFIGURATION 
  BAND_CONFIG_STRUCT = CREATE_STRUCT('NB_BAND', N_ELEMENTS(INDX_LINE), $
    'BAND_ID', BAND_ID(INDX_LINE),$
    'BAND_LABEL_STD',SENSOR_LABEL(INDX_LINE),$
    'BAND_REF_LABEL',SENSOR_REF_LABEL(INDX_LINE),$
    'BAND_WAVELENGTH',SENSOR_BANDS(INDX_LINE))

   RETURN, BAND_CONFIG_STRUCT

END


