;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GET_SENSOR_TO_SIMULATION_PRODUCT_PLOTS
;*
;* PURPOSE:
;*      CREATE OUTPUT FIGURES AS JPEG FILE INCLUDING  
;*      1 - RTOA_RATIO / RTOA_RATIO_ESTIM + 1:1 TREND LINE
;       2 - AK_VALUES vs. PIX NUMBER
;*
;* CALLING SEQUENCE:
;*      RES = GET_SENSOR_TO_SIMULATION_PRODUCT_PLOTS(OUT_FIG_FILENAME, RTOA_RATIO, RTOA_RATIO_ESTIM, AK_VALUES)
;*
;* INPUTS:
;*		OUT_FIG_FILENAME - PATH AND NAME OF THE FIGURE IMAGE FILE
;*		RTOA_RATIO		   - RO/TOA RATIO VALUES
;*		RTOA_RATIO		   - RO/TOA RATIO ESTIMATION VALUES
;*		AK_VALUES		     - AK VALUES
;*
;* KEYWORDS:
;*      VERBOSE           - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      STATUS            - 1: NO ERRORS REPORTED, (-1) OR 0: ERRORS DURING INGESTION
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      12 JAN 2015 - NCG / MAGELLIUM - CREATION
;*      20 FEB 2015 - NCG / MAGELLIUM - UPDATE WITH DIMITRI V4.0 SPECIFICATIONS
;*
;* VALIDATION HISTORY:
;*      20 JAN 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL 
;*      30 MAR 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL (DIMITRI V4.0) 
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GET_SENSOR_TO_SIMULATION_PRODUCT_PLOTS, OUT_FIG_FILENAME, RTOA_RATIO, RTOA_RATIO_ESTIM, AK_VALUES, VERBOSE=VERBOSE

  FCT_NAME = 'GET_SENSOR_TO_SIMULATION_PRODUCT_PLOTS'
    
  STATUS_OK = GET_DIMITRI_LOCATION('STATUS_OK')
  STATUS_ERROR = GET_DIMITRI_LOCATION('STATUS_ERROR')

  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ': ' + METHOD + ' - BAND ' + BAND_NAME 
      
  ; RETRIEVE INFORMATION FROM FIGURE NAME
  FIG_BASENAME = FILE_BASENAME( OUT_FIG_FILENAME, '.jpg' ) 
  FIG_BASENAME_ELTS = STRSPLIT(FIG_BASENAME, '_', /EXTRACT, COUNT=NB_ELTS)
  WAVELENGTH = FIG_BASENAME_ELTS[NB_ELTS-1]
  BAND_ID = FIG_BASENAME_ELTS[NB_ELTS-3] + '_' + FIG_BASENAME_ELTS[NB_ELTS-2]
  FIG_BASENAME_CPLMT = STRSPLIT(FIG_BASENAME, '_'+FIG_BASENAME_ELTS[NB_ELTS-3], /REGEX, /EXTRACT)
  FIG_BASENAME_CPLMT = FIG_BASENAME_CPLMT[0]
  
  ; CHECK IF OUTPUT FOLDER EXISTS
  OUT_FILEPATH = FILE_DIRNAME(OUT_FIG_FILENAME)
  OUT_FOLDER_INFO = FILE_INFO(OUT_FILEPATH)
  IF OUT_FOLDER_INFO.EXISTS EQ 0 THEN BEGIN
      FILE_MKDIR, OUT_FILEPATH
      IF KEYWORD_SET(VERBOSE) THEN BEGIN      
        PRINT, FCT_NAME + ': OUTPUT FOLDER ''' + OUT_FILEPATH + ''' DOES NOT EXIST >> CREATED'
      ENDIF
  ENDIF

  ; CHECK IF FILENAME EXISTS
  ; IF YES DELETE IT
  JPEG_FILENAME_INFO = FILE_INFO(OUT_FIG_FILENAME)
  IF JPEG_FILENAME_INFO.EXISTS EQ 1 THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ': JPEG FILE ' + OUT_FIG_FILENAME + ' EXIST >> OVERWRITE'
    FILE_DELETE, OUT_FIG_FILENAME
  ENDIF
  
  MACHINE_WINDOW = !D.NAME
  SET_PLOT, 'Z'
  DEVICE, SET_RESOLUTION=[1200,1000],SET_PIXEL_DEPTH=24
  ;DEVICE, SET_RESOLUTION=[CFIG_DATA.(1)[0],CFIG_DATA.(1)[1]],SET_PIXEL_DEPTH=24
  DEVICE, DECOMPOSED = 0
  ERASE
  LOADCT, 14, /SILENT
  
  ; INITIALISATION OF THE COLOR INDEX
  RED_INDEX=1
  GREEN_INDEX=2
  BLUE_INDEX=3
  TVLCT, 255, 0, 0, 1  ; RED COLOR
  TVLCT, 0, 255, 0, 2  ; GREEN COLOR
  TVLCT, 0, 0, 255, 3  ; BLUE COLOR

  ; SELECT MULTI PLOT ON 2 AXES
  !P.MULTI = [0, 1, 2]

  ; PLOT X/Y 
  RESIDUALS = RTOA_RATIO - RTOA_RATIO_ESTIM
  SSE = TOTAL(RESIDUALS * RESIDUALS)
  RMSE = SQRT(SSE/N_ELEMENTS(RESIDUALS))
  LINFIT_COEFFS = LINFIT(RTOA_RATIO, RTOA_RATIO_ESTIM)
  R_COEFF = CORRELATE(RTOA_RATIO, RTOA_RATIO_ESTIM)
  R2_COEFF = R_COEFF^2
  NB_PTS=N_ELEMENTS(RTOA_RATIO)
  MEAN = MEAN(RESIDUALS)
  
  RANGE = [ MIN([RTOA_RATIO,RTOA_RATIO_ESTIM]), MAX([RTOA_RATIO,RTOA_RATIO_ESTIM]) ]

  NB_LINE_STAT = 6
  FIT_STRINGS=STRARR(NB_LINE_STAT)
  FIT_STRINGS(0)='NB OF POINTS = ' + STRTRIM(STRING(NB_PTS),1)
  FIT_STRINGS(1)='COEFF. A(0) (intercept) = ' + STRTRIM(STRING(LINFIT_COEFFS(0),FORMAT='(%"%0.4f")'),1)
  FIT_STRINGS(2)='COEFF. A(1) (slope)     = ' + STRTRIM(STRING(LINFIT_COEFFS(1),FORMAT='(%"%0.4f")'),1)
  FIT_STRINGS(3)='Correlation coeff. : R = ' + STRTRIM(STRING(R_COEFF,FORMAT='(%"%0.4f")'),1)
  FIT_STRINGS(4)='Residuals RMSE = ' + STRTRIM(STRING(RMSE,FORMAT='(%"%0.4f")'),1)
  FIT_STRINGS(5)='Residuals MEAN = ' + STRTRIM(STRING(MEAN,FORMAT='(%"%0.4f")'),1)
  
  ADD_RANGE_FACTOR = (NB_LINE_STAT+0.5) * 0.04 + 0.02
  RANGE_Y_GRAPH=[RANGE(0), (RANGE(1)-RANGE(0))/(1-ADD_RANGE_FACTOR) + RANGE(0) ]

  PLOT, RTOA_RATIO, RTOA_RATIO_ESTIM, /NODATA, COLOR = 0, BACKGROUND = 255,$
  POSITION = [0.08, 0.50, 0.95, 0.93], $
  YMARGIN = [19, 2], $  ; [4,2] BY DEFAULT
  TITLE  = FIG_BASENAME_CPLMT + '!C!C' + ' RTOA Simulation vs RTOA Sensor ('+BAND_ID+' - '+WAVELENGTH+'nm)' ,$
  XRANGE = RANGE,$
  YRANGE = RANGE_Y_GRAPH,$
  XSTYLE = 1, YSTYLE = 1, $  ; FORCE AXES TO CORRESPOND EXACTLY TO SPECIFIED AXIS RANGE
  XTITLE = 'RTOA/TG Sensor [-]',$
  YTITLE = 'RTOA/TG Simulation[-]',$
  XTICKFORMAT='((F8.4))',$
  YTICKFORMAT='((F8.4))'

  OPLOT, RANGE, RANGE, COLOR = GREEN_INDEX, THICK=2
  OPLOT, RTOA_RATIO, RTOA_RATIO_ESTIM, COLOR = 70, PSYM = 1, SYMSIZE = 0.5
  OPLOT, RANGE, LINFIT_COEFFS(0)+LINFIT_COEFFS(1)*RANGE, COLOR = BLUE_INDEX, LINESTYLE=2, THICK=2
  
  FOR I_INFOS=0,NB_LINE_STAT-1 DO BEGIN
    XYOUTS, RANGE[0]+0.03*(RANGE(1)-RANGE(0)), RANGE_Y_GRAPH(1)-(I_INFOS+1.5)*0.04*(RANGE_Y_GRAPH(1)-RANGE_Y_GRAPH(0)), FIT_STRINGS(I_INFOS), /DATA, COLOR = 70
  END

  HISTO = HISTOGRAM(AK_VALUES, LOCATIONS=HISTO_X, BINSIZE=0.0001)
  PLOT, HISTO_X, HISTO, $
      COLOR = 0, BACKGROUND = 255,$
      POSITION = [0.08, 0.05, 0.95, 0.4], $
      YMARGIN = [17, 2], $  ; [4,2] BY DEFAULT
      TITLE  = ' Histogram of the RTOA Sensor vs RTOA Simulation ratio ' ,$
      XRANGE = [ MIN(HISTO_X), MAX(HISTO_X) ],$
      YRANGE = [ 0, MAX(HISTO) ],$
      XSTYLE = 1, YSTYLE = 1, $  ; FORCE AXES TO CORRESPOND EXACTLY TO SPECIFIED AXIS RANGE
      XTITLE = 'RTOA Sensor / RTOA Simulation',$        
      YTITLE = 'Number Of Pixels',$
      XTICKFORMAT='((F8.4))' 

  IF N_ELEMENTS(HISTO) GT 10 THEN BEGIN
    HISTO_FIT = GAUSSFIT(HISTO_X, HISTO, coeff, NTERMS=3)
    OPLOT, HISTO_X, HISTO_FIT, COLOR = BLUE_INDEX, LINESTYLE=2, THICK=2
  ENDIF
  
  ; CAPTURE Z BUFFER IMAGE
  FIG_CAPTURE = TVRD(TRUE=1)

  ; WRITE CAPTURE IMAGE TO OUTPUT JPEG FILE
  FILE_DELETE, OUT_FIG_FILENAME, /ALLOW_NONEXISTENT
  WRITE_JPEG,OUT_FIG_FILENAME,FIG_CAPTURE,TRUE=1,QUALITY=100
  ; RESTORE MULTI MODE TO SINGLE
  ERASE
  !P.MULTI = [0, 1, 1]
  ; RESTORE PLOT MODE TO MACHINE
  SET_PLOT, MACHINE_WINDOW

  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ': JPG FILE ' + OUT_FIG_FILENAME + ' WRITTEN'  

  RETURN, STATUS_OK

END