;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      NETCDFREAD_INGEST_OUTPUT       
;* 
;* PURPOSE:
;*      READ THE INGESTION OUTPUT NCDF FILE 
;* 
;* CALLING SEQUENCE:
;*      RES = NETCDFREAD_INGEST_OUTPUT(NCDF_INGEST_STRUCT, /VERBOSE)      
;* 
;* INPUTS:
;*      NCDF_FILENAME  = NAME OF THE INGESTION OUTPUT NCDF FILE
;*
;* KEYWORDS:
;*      NCDF_INGEST_STRUCT  - STRUCTURE ASSOCIATED TO THE NCDF INGESTION OUTPUT FILE
;*      VERBOSE             - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      STATUS  - READING STATUS (0:OK, 1:ERROR)
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      30 JAN 2015 - NCG / MAGELLIUM - CREATION (DIMITRI V4.0)
;*
;* VALIDATION HISTORY:
;*      30 MAR 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL (DIMITRI V4.0) 
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION NETCDFREAD_INGEST_OUTPUT, NCDF_FILENAME, NCDF_INGEST_STRUCT=NCDF_INGEST_STRUCT, VERBOSE=VERBOSE

  STATUS_OK = GET_DIMITRI_LOCATION('STATUS_OK')
  STATUS_ERROR = GET_DIMITRI_LOCATION('STATUS_ERROR')

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'NETCDFREAD_INGEST_OUTPUT: START'
  
  IF STRCMP(STRING(NCDF_FILENAME),'') THEN BEGIN
    PRINT, 'NETCDFREAD_INGEST_OUTPUT : ERROR, NO INPUT FILE PROVIDED, RETURNING...'
    RETURN, STATUS_ERROR
  ENDIF

  ; OPEN THE NETCDF FILE
  NCID = NCDF_OPEN(NCDF_FILENAME,/NOWRITE )
  IF NCID EQ -1 THEN BEGIN
    PRINT, 'NETCDFREAD_INGEST_OUTPUT: ERROR, NCDF FILE ' + NCDF_FILENAME + ' CAN NOT BE OPEN'
    RETURN, STATUS_ERROR
  ENDIF 
    
  ; GET SENSOR GLOBAL ATTRIBUTES
  NCDF_ATTGET, ncid , 'SENSOR', SENSOR , /GLOBAL
;  IF SENSOR EQ !NULL THEN BEGIN
;    PRINT, 'NETCDFREAD_INGEST_OUTPUT: ERROR, SENSOR GLOBAL ATTRIBUTE CAN NOT BE FOUND INSIDE ' + NCDF_FILENAME + ' NETCDF INGESTION FILE
;    RETURN, STATUS_ERROR
;  ENDIF
  SENSOR = STRING(SENSOR)
  
  ; GET BAND INFORMATION
  BAND_INFO = GET_SENSOR_BAND_INFO(SENSOR)
  BAND_NUMBER = BAND_INFO.NB_BAND  
  BAND_REF_LABEL = BAND_INFO.BAND_REF_LABEL

  ; CHECK THE NUMBER OF GLOBAL ATTRIBUTES, VARIABLES AND DIMENSIONS
  NCDF_INGEST_STRUCT = GET_NCDF_INGEST_STRUCT(1,1,1)
  NB_GLOBAL_ATT = N_TAGS(NCDF_INGEST_STRUCT.GLOBAL_ATT)
  NB_DIMS = N_TAGS(NCDF_INGEST_STRUCT.DIMENSIONS)
  NB_VARS = N_TAGS(NCDF_INGEST_STRUCT.VARIABLES) + BAND_NUMBER-1
  CONTROL = NCDF_INQUIRE(NCID)
  IF (CONTROL.NDIMS NE  NB_DIMS $
      OR CONTROL.NVARS NE  NB_VARS $
      OR CONTROL.NGATTS NE NB_GLOBAL_ATT) THEN BEGIN
    PRINT, 'NETCDFREAD_INGEST_OUTPUT: ERROR, NUMBER OF GLOBAL ATTRIBUTES, VARIABLES OR DIMENSIONS OF THE NCDF FILE ' $
                      + NCDF_FILENAME + ' DO NOT MATCH THE INGESTION OUTPUT FORMAT DEFINITION'
    RETURN, STATUS_ERROR
  ENDIF 
  
  ; CHECK DIMENSIONS FIELDS
  DIM_ROI     = NCDF_DIMID( ncid, 'ROI_PIXEL_NUMBER')
  DIM_VIEWDIR = NCDF_DIMID( ncid, 'VIEWDIR_NUMBER')
  IF (DIM_ROI EQ -1 OR DIM_VIEWDIR EQ -1) THEN BEGIN
    PRINT, 'NETCDFREAD_INGEST_OUTPUT: ERROR, APPROPRIATE DIMENSION FIELDS CAN NOT BE FOUND INSIDE ' + NCDF_FILENAME + ' NETCDF INGESTION FILE
    RETURN, STATUS_ERROR
  ENDIF
  
  ; READ DIMENSIONS FIELDS
  NCDF_DIMINQ, ncid, DIM_ROI, NAME, ROI_PIXEL_NUMBER
  NCDF_DIMINQ, ncid, DIM_VIEWDIR, NAME, VIEWDIR_NUMBER

  ; CREATE INGESTION OUTPUT STRUCURE
  NCDF_INGEST_STRUCT = GET_NCDF_INGEST_STRUCT(ROI_PIXEL_NUMBER, VIEWDIR_NUMBER, BAND_NUMBER)
  
  ; READ GLOBAL ATTRIBUTES
  TAGS_NAME = TAG_NAMES(NCDF_INGEST_STRUCT.GLOBAL_ATT)
  FOR NUM=0, NB_GLOBAL_ATT-1 DO BEGIN
    NCDF_ATTGET, NCID, TAGS_NAME[NUM] , ATTRIBUT , /GLOBAL
    NCDF_INGEST_STRUCT.GLOBAL_ATT.(NUM) = STRING(ATTRIBUT)
  ENDFOR
  
  ; READ VARIABLES FIELDS
  TAGS_NAME = TAG_NAMES(NCDF_INGEST_STRUCT.VARIABLES)
  NB_TAGS = N_TAGS(NCDF_INGEST_STRUCT.VARIABLES)
  FOR NUM=0, NB_TAGS-1 DO BEGIN
  
    IF TAGS_NAME[NUM] EQ 'REFL_BAND' THEN BEGIN
      
      ; REFLECTANCE BAND VARIABLE
      FOR BAND=0, BAND_NUMBER-1 DO BEGIN
      
        NCDF_TAG_NAME = 'REFL_' + BAND_REF_LABEL[BAND]
        NCDF_VAR_ID = NCDF_VARID(NCID, NCDF_TAG_NAME)
        IF NCDF_VAR_ID EQ -1 THEN BEGIN
          PRINT, 'NETCDFREAD_INGEST_OUTPUT: ERROR, VARIABLE ' + NCDF_TAG_NAME + ' NOT FOUND INSIDE ' + NCDF_FILENAME + ' NETCDF INGESTION FILE
          RETURN, STATUS_ERROR
        ENDIF     
        NCDF_VARGET, NCID, NCDF_VAR_ID, VARIABLE
        NCDF_INGEST_STRUCT.VARIABLES.REFL_BAND(*,*,BAND) = VARIABLE
        
      ENDFOR
    
    ENDIF ELSE BEGIN
      ; OTHER VARIABLE 
      NCDF_VAR_ID = NCDF_VARID(NCID, TAGS_NAME[NUM])
      IF NCDF_VAR_ID EQ -1 THEN BEGIN
        PRINT, 'NETCDFREAD_INGEST_OUTPUT: ERROR, VARIABLE ' + TAGS_NAME[NUM] + ' NOT FOUND INSIDE ' + NCDF_FILENAME + ' NETCDF INGESTION FILE
        RETURN, STATUS_ERROR
      ENDIF     
      NCDF_VARGET, NCID, NCDF_VAR_ID, VARIABLE
      NCDF_INGEST_STRUCT.VARIABLES.(NUM) = VARIABLE
    ENDELSE
  
  ENDFOR
  
  ; READ VARIABLES ATTRIBUTES FIELDS
  
  ; TBC
  
  
  
  
  
 
  NCDF_CLOSE, NCID

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'NETCDFREAD_INGEST_OUTPUT: END'
  
  RETURN, STATUS_OK
  
END
