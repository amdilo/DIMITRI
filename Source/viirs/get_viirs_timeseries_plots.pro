FUNCTION GET_VIIRS_TIMESERIES_PLOTS, OUTPUT_SAV, NO_ZBUFF=NO_ZBUFF, COLOUR_TABLE=COLOUR_TABLE, PLOT_XSIZE=PLOT_XSIZE, PLOT_YSIZE=PLOT_YSIZE, VERBOSE=VERBOSE
;+
; :Name:
;      GET_VIIRS_TIMESERIES_PLOTS
;
; :Description:
;      Generates plots from the supplied time series of dimitri VIIRS data.
;
; :Calling sequence:
;      RES = GET_VIIRS_TIMESERIES_PLOTS(OUTPUT_SAV)
;
; :Params:
;      OUTPUT_SAV :
;         String of the sensor/processing output sav
;
; :Keywords:
;      COLOUR_TABLE :
;          User defined idl colour table index (default is 39)
;      PLOT_XSIZE :
;          Width of generated plots (default is 700px)
;      PLOT_YSIZE :
;          Height of generated plots (default is 400px)
;      NO_ZBUFF :
;           If set then plots are generated in windows and not within the z-buffer.
;      VERBOSE :
;           processing status outputs
;
; :Returns:
;      plots of toa reflectance, reflectance evolution, solar zenith angle and sensor
;      zenith angle automatically saved.
;
; :Common blocks:
;      NONE
;
; :History:
;      02 JUL 2013 - D MARRABLE    - DIMITRI-2 V1.0
;-
;-----------------------------------------------
; RESTORE THE L1B REFLECTANCE

  TEMP = FILE_INFO(OUTPUT_SAV)
  IF TEMP.EXISTS EQ 1 THEN BEGIN
    RESTORE,OUTPUT_SAV
  ENDIF ELSE BEGIN
    PRINT, 'VIIRS_TIMESERIES_PLOTS: ERROR, OUTPUT_SAV DOES NOT EXIST'
    RETURN,-1
  ENDELSE

;-----------------------------------------------
; FIND ONLY THE GOOD DATA

  ;NUM_NON_REF = 5+12
  ;NB_BANDS = 15
  
  NUM_NON_REF = 27
  NB_BANDS = 11
  RES = WHERE(SENSOR_L1B_REF[NUM_NON_REF,*] GT 0.0 and SENSOR_L1B_REF[NUM_NON_REF,*] lt 1.0)
  IF RES[0] EQ -1 THEN RETURN,-1
  VIIRS_L1B_REF_GD = SENSOR_L1B_REF[*,RES]

;------------------------------------------------
; GET THE SIZE DIMENSIONS OF INPUT L1B TIMESERIES (NOTE, EXPECTING DIMITRI-VIIRS VARIABLE STRUCTURE)

  NB_COLS = num_non_ref+2*nb_bands
  RES = SIZE(VIIRS_L1B_REF_GD)
  IF RES[1] NE NB_COLS THEN BEGIN
    PRINT, 'VIIRS_TIMESERIES_PLOTS: ERROR, INPUT L1B VARIABLE STRUCTURE MUST BE IN DIMITRI FORMAT'
    RETURN, -1
  ENDIF 
 
;------------------------------------------------
; SET PARAMETERS AND KEYWORD VALUES

  ;NB_BANDS = 15
  CFIG_DATA = GET_DIMITRI_CONFIGURATION()
  IF NOT KEYWORD_SET(COLOUR_TABLE) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: NO COLOR_TABLE SET, USING DEFAULT OF 39'
    COLOUR_TABLE = CFIG_DATA.(1)[2]
  ENDIF
  IF NOT KEYWORD_SET(PLOT_XSIZE) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: PLOT_XSIZE NOT SET, USING DEFAULT OF 700'
    PLOT_XSIZE = CFIG_DATA.(1)[0]
  ENDIF
  IF NOT KEYWORD_SET(PLOT_YSIZE) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: PLOT_YSIZE NOT SET, USING DEFAULT OF 400'
    PLOT_YSIZE = CFIG_DATA.(1)[1]
  ENDIF 
  
  YMIN = 0.0
  YMAX = 1.0

;------------------------------------------------
; DEFINE OUTPUT FILENAMES BASED ON OUTPUT_SAV

  OUTPUT_BASE = STRMID(OUTPUT_SAV,0,STRLEN(OUTPUT_SAV)-11)
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: OUTPUT_BASE = ',OUTPUT_BASE
 
;------------------------------------------------
; SETUP WINDOW PROPERTIES

  MACHINE_WINDOW = !D.NAME
  IF NOT KEYWORD_SET(NO_ZBUFF) THEN BEGIN
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: GENERATING PLOTS WITHIN Z-BUFFER'
  SET_PLOT, 'Z'
  DEVICE, SET_RESOLUTION=[PLOT_XSIZE,PLOT_YSIZE],set_pixel_depth=24
  ERASE  
  ENDIF ELSE WINDOW,XSIZE = PLOT_XSIZE,YSIZE=PLOT_YSIZE
  DEVICE, DECOMPOSED = 0
  LOADCT, COLOUR_TABLE

;------------------------------------------------
; PLOT REFLECTANCE DATA AGAINST DOY

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: PLOTTING TOA REFLECTANCE AGAINST DOY'
  PLOT,VIIRS_L1B_REF_GD[0,*],VIIRS_L1B_REF_GD[NUM_NON_REF,*],/NODATA,$
  COLOR = 0, BACKGROUND = 255,$
  YTITLE = 'TOA REFLECTANCE (DL)',$
  XTITLE = 'DECIMAL YEAR',$
  YRANGE = [YMIN,YMAX],$
  XTICKFORMAT='((F8.3))'

  FOR PLOT_BAND=0,NB_BANDS-1 DO BEGIN
    TT = WHERE(VIIRS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,*] GT 0.0 AND VIIRS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,*] LT 1.0)
    IF TT[0] GT -1 THEN OPLOT, VIIRS_L1B_REF_GD[0,TT],VIIRS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,TT],$
    COLOR = 250.*PLOT_BAND/NB_BANDS
  ENDFOR

  TEMP = TVRD(TRUE=1)
  OUTPUT_IMAGE = STRING(OUTPUT_BASE+'TOA_REFLECTANCE.jpg')
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: REFLECTANCE OUTPUT AT ',OUTPUT_IMAGE
  WRITE_JPEG,OUTPUT_IMAGE,TEMP,TRUE=1,QUALITY=100
  ERASE

;----------------------------------------------
;PLOT REFLECTANCE EVOLUTION AGAINST DOY

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: PLOTTING TOA REFLECTANCE EVOLUTION AGAINST DOY'
  PLOT,VIIRS_L1B_REF_GD[0,*],100.0*(VIIRS_L1B_REF_GD[NUM_NON_REF,*]-VIIRS_L1B_REF_GD[NUM_NON_REF,0])/VIIRS_L1B_REF_GD[NUM_NON_REF,0],/NODATA,$
  COLOR = 0, BACKGROUND = 255,$
  YTITLE = 'TOA REFLECTANCE EVOLUTION (%)',$
  XTITLE = 'DECIMAL YEAR',$
  XTICKFORMAT='((F8.3))'
 
  FOR PLOT_BAND=0,NB_BANDS-1 DO BEGIN
    TT = WHERE(VIIRS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,*] GT 0.0 AND VIIRS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,*] LT 1.0)
    IF TT[0] GT -1 THEN OPLOT, VIIRS_L1B_REF_GD[0,TT],100.0*(VIIRS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,TT]-VIIRS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,0])/VIIRS_L1B_REF_GD[NUM_NON_REF+PLOT_BAND,0],$
    COLOR = 250.*PLOT_BAND/NB_BANDS
  ENDFOR

  TEMP = TVRD(/TRUE)
  OUTPUT_IMAGE = string(OUTPUT_BASE+'TOA_EVOLUTION.jpg')
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: EVOLUTION OUTPUT AT ',OUTPUT_IMAGE
  WRITE_JPEG,OUTPUT_IMAGE,TEMP,TRUE=1,QUALITY=100
  ERASE

;-----------------------------------------------
; PLOT SENSOR ZENITH AGAINST DOY

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: PLOTTING SENSOR ZENITH AGAINST DOY' 
  PLOT,VIIRS_L1B_REF_GD[0,*],VIIRS_L1B_REF_GD[1,*],/NODATA,$
  COLOR = 0, BACKGROUND = 255,$
  YTITLE = 'SENSOR ZENITH OVER ROI (DEGREES)',$
  XTITLE = 'DECIMAL YEAR',$
  XTICKFORMAT='((F8.3))'
  
  OPLOT,VIIRS_L1B_REF_GD[0,*],VIIRS_L1B_REF_GD[1,*],$
  PSYM = 2,$
  COLOR = 250

  TEMP = TVRD(/TRUE)
  OUTPUT_IMAGE = STRING(OUTPUT_BASE+'SENSOR_ZENITH_ANGLE.jpg')
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: SENSOR ZENITH OUTPUT AT ',OUTPUT_IMAGE
  WRITE_JPEG,OUTPUT_IMAGE,TEMP,TRUE=1,QUALITY=100
  ERASE

;-----------------------------------------------
; PLOT SOLAR ZENITH AGAINST DOY

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: PLOTTING SOLAR ZENITH AGAINST DOY' 
  PLOT,VIIRS_L1B_REF_GD[0,*],VIIRS_L1B_REF_GD[3,*],/NODATA,$
  COLOR = 0, BACKGROUND = 255,$
  YTITLE = 'SOLAR ZENITH OVER ROI (DEGREES)',$
  XTITLE = 'DECIMAL YEAR',$
  XTICKFORMAT='((F8.3))'
  
  OPLOT,VIIRS_L1B_REF_GD[0,*],VIIRS_L1B_REF_GD[3,*],$
  PSYM = 2,$
  COLOR = 70

  TEMP = TVRD(/TRUE)
  OUTPUT_IMAGE = STRING(OUTPUT_BASE+'SOLAR_ZENITH_ANGLE.jpg')
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: SOLAR ZENITH OUTPUT AT ',OUTPUT_IMAGE
  WRITE_JPEG,OUTPUT_IMAGE,TEMP,TRUE=1,QUALITY=100
  ERASE

;-----------------------------------------------
; RETURN DEVISE WINDOW TO NOMINAL SETTING
 
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'VIIRS_TIMESERIES_PLOTS: RESETTING DEVICE WINDOW PROPERTIES'
  IF KEYWORD_SET(NO_ZBUFF) THEN WDELETE
  SET_PLOT, MACHINE_WINDOW
  RETURN,1

END
