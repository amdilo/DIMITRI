;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      CLOUD_MODULE_VGT 
;* 
;* PURPOSE:
;*      THIS FUNCTION PERFORMS THE OPERATIONAL VEGETATION CLOUD SCREENING TEST ON A 
;*      GIVEN ARRAY F SPECTRAL DATA. THE ALGORITHM FOR THE TEST IS DESCRIBED IN 
;*      "DEVELOPMENT OF A CLOUD,SNOW AND CLOUD SHADOW MASK FOR VEGETATION IMAGERY" 
;*      BY G LISSENS, P KEMPENEERS AND F FIERENS
;* 
;* CALLING SEQUENCE:
;*      PIXEL_MASK = CLOUD_MODULE_VGT(SITE_TYPE,VGT_REF)
;* 
;* INPUTS:
;*      SITE_TYPE - A STRING OF THE DIMITRI VALIDATION SITE TYPE (E.G. 'OCEANIC')
;*      VGT_REF   - A FLOAT ARRAY OF THE TOP OF ATMOSPHERE REFLECTANCE AT THE VEGETATION 
;*                  WAVEBANDS, OF THE FORM [NUM_PIXELS,NUM_BANDS]     
;*
;* KEYWORDS:
;*      VERBOSE  - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      PIXEL_MASK - A INTEGER OF SIZE NUM_PIXELS, 0S MEAN CLEAR PIXEL, 1 MEANS CLOUDY
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      01 APR 2011 - C KENT    - DIMITRI-2 V1.0
;*      07 APR 2011 - C KENT    - ADDED BAND INDEX VALUES
;*
;* VALIDATION HISTORY:
;*      12 APR 2011 - C KENT    - NOMINAL COMPILATION AND OPERATION ON WINDOWS 32BIT 
;*                                IDL 7.1 AND LINUX 64BIT IDL 8.0        
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION CLOUD_MODULE_VGT, SITE_TYPE, VGT_REF, CS_CLASSIF_MATRIX=CS_CLASSIF_MATRIX, VERBOSE=VERBOSE

  STATUS_OK = GET_DIMITRI_LOCATION('STATUS_OK')
  STATUS_ERROR = GET_DIMITRI_LOCATION('STATUS_ERROR')

;-----------------------
; DEFINE NUMBER OF PIXELS 
; AND PIXEL/SNOW MASK ARRAYS

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'CLOUD_MODULE_VGT: STARTING CLOUD SCREENING TESTS'
  NUM_PIXELS  = N_ELEMENTS(VGT_REF[*,0])
  PIXEL_MASK  = INTARR(NUM_PIXELS)-1
  SNOW_MASK   = INTARR(NUM_PIXELS)
  
  B1 = 0
  B2 = 1
  B3 = 2
  B4 = 3

;-----------------------
; DEFINE CLOUD SCREENING FLAG VALUES

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'CLOUD_MODULE_VGT: DEFINING FLAGS'
  CLEAR_FLAG      = 0
  CLOUDY_FLAG     = 1
  SNOW_FLAG       = 2

  CASE STRUPCASE(SITE_TYPE) OF
    'ICE'   : UNCERTAIN_FLAG  = CLEAR_FLAG
    'SNOW'  : UNCERTAIN_FLAG  = CLEAR_FLAG
    'DESERT': UNCERTAIN_FLAG  = CLEAR_FLAG
    'SALT'  : UNCERTAIN_FLAG  = CLEAR_FLAG
    ELSE    : UNCERTAIN_FLAG  = CLOUDY_FLAG
  ENDCASE

;-----------------------
; DEFINE CLOUD SCREENING THRESHOLDS

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'CLOUD_MODULE_VGT: DEFINING THRESHOLDS'
  THRESHOLD_SF = 0.0005

  THRESH_1BLUE = 493.0
  THRESH_1SWIR = 180.0
  THRESH_2BLUE = 720.0
  THRESH_2SWIR = 320.0

  THRESH_SNOW_RED = 615.0
  THRESH_SNOW_MIR = 481.0
  THRESH_SNOW_1   = -773.0
  THRESH_SNOW_2   = 87.0
  THRESH_SNOW_3   = 77.0

;-----------------------
; TEST 1: CLEAR PIXEL TEST

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'CLOUD_MODULE_VGT: RUNNING CLEAR PIXEL TEST'  
  CLEAR_PIXELS = WHERE( VGT_REF[*,B1] LT THRESH_1BLUE*THRESHOLD_SF OR $
                        VGT_REF[*,B4] LT THRESH_1SWIR*THRESHOLD_SF ,COUNT)

  IF CLEAR_PIXELS[0] GT -1 THEN PIXEL_MASK[CLEAR_PIXELS] = CLEAR_FLAG

;-----------------------
; TEST 2: CLOUDY PIXEL TEST

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'CLOUD_MODULE_VGT: RUNNING CLOUDY PIXEL TEST' 
  CLOUDY_PIXELS = WHERE(PIXEL_MASK   NE CLEAR_FLAG                  AND $
                       (VGT_REF[*,B1] GE THRESH_2BLUE*THRESHOLD_SF   OR  $
                        VGT_REF[*,B4] GE THRESH_2SWIR*THRESHOLD_SF) ,COUNT)

  IF CLOUDY_PIXELS[0] GT -1 THEN PIXEL_MASK[CLOUDY_PIXELS] = CLOUDY_FLAG

;-----------------------
; TEST 2: UNCERTAIN PIXEL TEST

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'CLOUD_MODULE_VGT: RESETTING UNCERTAIN FLAGS'   
  UNCERTAIN_PIXELS = WHERE(PIXEL_MASK NE CLEAR_FLAG AND PIXEL_MASK NE CLOUDY_FLAG, COUNT)
  IF UNCERTAIN_PIXELS[0] GT -1 THEN PIXEL_MASK[UNCERTAIN_PIXELS] = UNCERTAIN_FLAG

;-----------------------
; SNOW TEST

  IF STRUPCASE(SITE_TYPE) EQ 'OCEANIC' THEN GOTO,SKIP_SNOW_TEST

;-----------------------
; SNOW TEST PART 1

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'CLOUD_MODULE_VGT: STARTING PART 1 OF SNOW TEST' 
  SNOW1 = WHERE(VGT_REF[*,B2] GE THRESH_SNOW_RED*THRESHOLD_SF AND $
                VGT_REF[*,B4] LT THRESH_SNOW_MIR*THRESHOLD_SF )

  IF SNOW1[0] EQ -1 THEN GOTO,SKIP_SNOW_TEST
  SNOW_MASK[SNOW1] = SNOW_FLAG

;-----------------------
; SNOW TEST PART 2

  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'CLOUD_MODULE_VGT: STARTING PART 2 OF SNOW TEST' 
  VAR1 = 1000*(VGT_REF[*,B1]-VGT_REF[*,B3])/(VGT_REF[*,B1]+VGT_REF[*,B3])
  VAR2 = 1000*(VGT_REF[*,B1]-VGT_REF[*,B4])/(VGT_REF[*,B1]+VGT_REF[*,B4])
  VAR3 = ((VGT_REF[*,B1]+VGT_REF[*,B2])/2.0)-VGT_REF[*,B4]

  SNOW2 = WHERE(SNOW_MASK EQ SNOW_FLAG                  AND $
                VAR1      GE THRESH_SNOW_1              AND $
                VAR2      GE THRESH_SNOW_2              AND $
                VAR3      GE THRESH_SNOW_3*THRESHOLD_SF )

  IF SNOW2[0] GT -1 THEN PIXEL_MASK[SNOW2] = CLEAR_FLAG ;PIXELS ARE SNOW AND NOT CLOUD!

;-----------------------
; SET NON-CLOUD PIXELS TO CLEAR AND RETURN

  SKIP_SNOW_TEST:
  IF KEYWORD_SET(VERBOSE) THEN PRINT, 'CLOUD_MODULE_VGT: RETURNING CLOUD MASK' 
  RES = WHERE(PIXEL_MASK NE CLOUDY_FLAG)
  IF RES[0] GT -1 THEN PIXEL_MASK[RES] = CLEAR_FLAG

;-----------------------
; SET OUTPUT STRUCTURE
  TEMP_DIMS     = SIZE(VGT_REF,/DIMENSIONS)
  NBCAN=TEMP_DIMS[1]

  CS_CLASSIF_MATRIX= MAKE_ARRAY(NUM_PIXELS,2,/LONG,VALUE=MISSING_VALUE_LONG)
  IDX_VALID  = INDGEN(NUM_PIXELS)
 
  CS_CLASSIF_MATRIX[*,0]=IDX_VALID
  CS_CLASSIF_MATRIX[*,1]=PIXEL_MASK

  RETURN, STATUS_OK

END