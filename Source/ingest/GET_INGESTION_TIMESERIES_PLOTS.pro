;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GET_INGESTION_TIMESERIES_PLOTS       
;* 
;* PURPOSE:
;*      GENERATES PLOTS FROM THE SUPPLIED TIME SERIES OF DIMITRI AATSR DATA.
;* 
;* CALLING SEQUENCE:
;*      RES = GET_INGESTION_TIMESERIES_PLOTS(OUTPUT_SAV)      
;* 
;* INPUTS:
;*      NCDF_FILE  -  STRING OF THE SENSOR/PROCESSING NCDF OUTPUT FILE      
;*
;* KEYWORDS:
;*      COLOUR_TABLE      - USER DEFINED IDL COLOUR TABLE INDEX (DEFAULT IS 39)
;*      PLOT_XSIZE        - WIDTH OF GENERATED PLOTS (DEFAULT IS 700PX)
;*      PLOT_YSIZE        - HEIGHT OF GENERATED PLOTS (DEFAULT IS 400PX)
;*      NO_ZBUFF          - IF SET THEN PLOTS ARE GENERATED IN WINDOWS AND NOT 
;*                          WITHIN THE Z-BUFFER.
;*      VERBOSE           - PROCESSING STATUS OUTPUTS      
;*
;* OUTPUTS:
;*      PLOTS OF TOA REFLECTANCE, REFLECTANCE EVOLUTION, SOLAR ZENITH ANGLE AND SENSOR 
;*      ZENITH ANGLE AUTOMATICALLY SAVED.  
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      13 DEC 2010 - C KENT   - DIMITRI-2 V1.0
;*      06 JAN 2011 - C KENT   - MODIFIED TOA REF PLOTS TO INCLUDE BOTH DIRECTIONS 
;*                               SEPERATELY
;*      07 JAN 2011 - C KENT   - DIMITRI-2 V2.0, MAJOR REVISION, ADDEDD FOR LOOP TO PROVIDE 
;*                               ANALYSIS FOR BOTH DIRECTIONS
;*      10 JAN 2011 - C KENT   - CHANGED INPUT VARIABLE TO SENSOR_L1B_REF
;*      12 JAN 2011 - C KENT   - UPDATED TO REFLECT CHANGES IN SENSORS_L1B_REF (INCLUDES VAA AND SAA)
;*      22 MAR 2011 - C KENT   - ADDED CONFIGURAITON FILE DEPENDENCE
;*      04 JUL 2011 - C KENT   - ADDED AUX INFO TO OUTPUT SAV
;*      03 APR 2015 - NCG / MAGELLIUM - ADD MISSING VALUE SCREENING AND AXES RANGE CONSOLIDATION (DIMITRI V4)
;*      14 APR 2015 - NCG / MAGELLIUM - REMOVE TOA EVOLUTION GRAPH (DIMITRI V4.1)
;*
;* VALIDATION HISTORY:
;*      13 DEC 2010 - C KENT   - WINDOWS 32-BIT MACHINE IDL 7.1: COMPILATION SUCCESSFUL,
;*                               ZBUFFER AND NOMINAL PLOTS PRODUCED OK.
;*      06 JAN 2010 - C KENT   - LINUX 64-BIT MACHINE IDL 8.0: COMPILATION SUCCESSFUL,
;*                               VALUES EQUAL TO WINDOWS 32-BIT MACHINE
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GET_INGESTION_TIMESERIES_PLOTS,NCDF_FILE,SENSOR,DIR_STR=DIR_STR,NO_ZBUFF=NO_ZBUFF,COLOUR_TABLE=COLOUR_TABLE,PLOT_XSIZE=PLOT_XSIZE,PLOT_YSIZE=PLOT_YSIZE,VERBOSE=VERBOSE

  FCT_NAME = 'GET_INGESTION_TIMESERIES_PLOTS'
  
  STATUS_OK = GET_DIMITRI_LOCATION('STATUS_OK')
  STATUS_ERROR = GET_DIMITRI_LOCATION('STATUS_ERROR')

  MISSING_VALUE_FLT = FLOAT(GET_DIMITRI_LOCATION('NCDF_MISSING_VALUE'))
  DL = GET_DIMITRI_LOCATION('DL')

;------------------------------------------------
; SET KEYWORD VALUES

  CFIG_DATA = GET_DIMITRI_CONFIGURATION()
  IF NOT KEYWORD_SET(COLOUR_TABLE) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - NO COLOR_TABLE SET, USING DEFAULT OF 39'
    COLOUR_TABLE = CFIG_DATA.(1)[2]
  ENDIF
  IF NOT KEYWORD_SET(PLOT_XSIZE) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - PLOT_XSIZE NOT SET, USING DEFAULT OF 700'
    PLOT_XSIZE = CFIG_DATA.(1)[0]
  ENDIF
  IF NOT KEYWORD_SET(PLOT_YSIZE) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - PLOT_YSIZE NOT SET, USING DEFAULT OF 400'
    PLOT_YSIZE = CFIG_DATA.(1)[1]
  ENDIF 

;-----------------------------------------------
; RESTORE THE L1B REFLECTANCE

  TEMP = FILE_INFO(NCDF_FILE)
  IF TEMP.EXISTS EQ 1 THEN BEGIN
    EXTRACT_TOA_NCDF = READ_DIMITRI_EXTRACT_TOA_NCDF(NCDF_FILE, VERBOSE=VERBOSE)
  ENDIF ELSE BEGIN
    PRINT, FCT_NAME + ' - ERROR, ' + NCDF_FILE + ' DOES NOT EXIST'
    RETURN, STATUS_ERROR
  ENDELSE

  NB_BANDS = LONG(STRING(EXTRACT_TOA_NCDF.ATT_NBANDS))
  NB_DIR   = LONG(STRING(EXTRACT_TOA_NCDF.ATT_NDIRS))
  
  ; CHECK COHERENCE BETWEEN VIEWING DIRECTION NUMBER AND KEYWORD DIR_STR
  IF KEYWORD_SET(DIR_STR) THEN BEGIN
    IF NB_DIR NE N_ELEMENTS(DIR_STR) THEN BEGIN
      IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - VIEWING DIRECTION NUMBER IN NCDF FILE ('+ STRTRIM(STRING(NB_DIR),2) $
                                        + ') DOES NOT CORRESPONDS TO THE NUMBER OF VIEWING DIRECTION NAMES (' + DIR_STR +')'
      RETURN, STATUS_ERROR
    ENDIF
  ENDIF ELSE BEGIN
    IF NB_DIR GT 1 THEN BEGIN
      IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - DIR_STR KEYWORD NEEDED FOR VIEWING DIRECTION NUMBER GREATER THAN 1'
      RETURN, STATUS_ERROR
    ENDIF
  ENDELSE
  
;------------------------------------------------
; SETUP WINDOW PROPERTIES

  MACHINE_WINDOW = !D.NAME
  IF NOT KEYWORD_SET(NO_ZBUFF) THEN BEGIN
  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - GENERATING PLOTS WITHIN Z-BUFFER'
  SET_PLOT, 'Z'
  DEVICE, SET_RESOLUTION=[PLOT_XSIZE,PLOT_YSIZE],SET_PIXEL_DEPTH=24
  ERASE  
  ENDIF ELSE WINDOW,XSIZE = PLOT_XSIZE,YSIZE=PLOT_YSIZE
  DEVICE, DECOMPOSED = 0
  LOADCT, COLOUR_TABLE

;------------------------------------------------
; DEFINE OUTPUT FILENAMES BASED ON NCDF_FILE
  OUTPUT_BASE = STRMID(NCDF_FILE,0,STRPOS(NCDF_FILE,'.',/REVERSE_SEARCH))
  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - OUTPUT_BASE = ',OUTPUT_BASE
  
  ; EXTRACT SITE, SENSOR, PROC VERSION FIELDS FROM FOLDER STRUCTURE
  START = STRPOS(NCDF_FILE,DL+'Site_')+1
  STOP = STRPOS(NCDF_FILE,'REPORT',/REVERSE_SEARCH)-1
  TITLE_BASE_FIELDS = STRSPLIT( STRMID(NCDF_FILE,START,STOP-START), DL, COUNT=COUNT, /EXTRACT)
  TITLE_BASE = STRSPLIT(TITLE_BASE_FIELDS[0], 'Site_', /EXTRACT, /REGEX) $
                + ' - ' + TITLE_BASE_FIELDS[1] $
                + ' - ' + STRSPLIT(TITLE_BASE_FIELDS[2], 'Proc_', /EXTRACT, /REGEX)
 
  ; GET FIRST AND LAST DATE
  MIN_DATE = MIN(EXTRACT_TOA_NCDF.VAR_DTIME[*])
  MAX_DATE = MAX(EXTRACT_TOA_NCDF.VAR_DTIME[*])

;-----------------------------------------------
; LOOP OVER EACH DIRECTION 
  FOR IN_DIR = 0, NB_DIR-1 DO BEGIN
    
;-----------------------------------------------
; FIND ONLY THE GOOD DATA
   
    L1B_REF_DIR = EXTRACT_TOA_NCDF.VAR_RHOMU[*,*,IN_DIR]
    VAR_PIX_DIR = EXTRACT_TOA_NCDF.VAR_PIX[*,*,IN_DIR]
    
    IDX = WHERE(L1B_REF_DIR GT 0.0 AND L1B_REF_DIR LT 1.0, COUNT)
    IF COUNT EQ 0 THEN BEGIN
      IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - ERROR, NO MEAN TOA VALUE BETWEEN 0 AND 1 OR VALID ROI, RETURNING'
      RETURN, STATUS_ERROR
    ENDIF
 
    YMIN = 0.0
    YMAX = 1.0

;------------------------------------------------
; PLOT REFLECTANCE DATA AGAINST DOY

    IF KEYWORD_SET(VERBOSE) THEN BEGIN
      IF NB_DIR GT 1 THEN PRINT, FCT_NAME + ' - PLOTTING TOA REFLECTANCE AGAINST DOY, DIRECTION: ',DIR_STR[IN_DIR]  $
                     ELSE PRINT, FCT_NAME + ' - PLOTTING TOA REFLECTANCE AGAINST DOY'
    ENDIF
    IF NB_DIR GT 1 THEN BEGIN
      OUTPUT_IMAGE = STRING(OUTPUT_BASE+'_'+DIR_STR[IN_DIR]+'_TOA_REFLECTANCE.jpg')
      TITLE  = TITLE_BASE + '!C!C' + ' TOA Reflectance - '+DIR_STR[IN_DIR]+' ('+TITLE_BASE+')'
    ENDIF ELSE BEGIN
      OUTPUT_IMAGE = STRING(OUTPUT_BASE+'_TOA_REFLECTANCE.jpg')
      TITLE  =  'TOA Reflectance ('+TITLE_BASE+')'
    ENDELSE
    
    PLOT,EXTRACT_TOA_NCDF.VAR_DTIME[*],L1B_REF_DIR[0,*],/NODATA,$
    COLOR = 0, BACKGROUND = 255,$
    YMARGIN = [4,3], $  
    TITLE  = TITLE ,$
    YTITLE = 'TOA REFLECTANCE (DL)',$
    XTITLE = 'DECIMAL YEAR',$
    YRANGE = [YMIN,YMAX],$
    XSTYLE = 1, YSTYLE = 1, $  ; FORCE AXES TO CORRESPOND EXACTLY TO SPECIFIED AXIS RANGE
    XTICKFORMAT='((F8.3))'

    FOR BAND=0,NB_BANDS-1 DO BEGIN
      TT = WHERE(L1B_REF_DIR[BAND,*] GT 0.0 AND L1B_REF_DIR[BAND,*] LT 1.0, COUNT)
      IF COUNT GT 0 THEN OPLOT, EXTRACT_TOA_NCDF.VAR_DTIME[TT],L1B_REF_DIR[BAND,TT],COLOR = 250.*(BAND+0.5)/FLOAT(NB_BANDS)
    ENDFOR

    TEMP = TVRD(TRUE=1)
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - REFLECTANCE OUTPUT AT ',OUTPUT_IMAGE
    WRITE_JPEG,OUTPUT_IMAGE,TEMP,TRUE=1,QUALITY=100
    ERASE
 
    
;-----------------------------------------------
; PLOT SOLAR ZENITH AGAINST DOY

    IF KEYWORD_SET(VERBOSE) THEN BEGIN
      IF NB_DIR GT 1 THEN PRINT, FCT_NAME + ' - PLOTTING SOLAR ZENITH AGAINST DOY, DIRECTION: ',DIR_STR[IN_DIR]  $
                     ELSE PRINT, FCT_NAME + ' - PLOTTING SOLAR ZENITH AGAINST DOY'
    ENDIF
    
    IF NB_DIR GT 1 THEN BEGIN
      OUTPUT_IMAGE = STRING(OUTPUT_BASE+'_'+DIR_STR[IN_DIR]+'_SOLAR_ZENITH_ANGLE.jpg')
      TITLE  =  ' Solar Zenith Angle - '+DIR_STR[IN_DIR]+' ('+TITLE_BASE+')'
    ENDIF ELSE BEGIN
      OUTPUT_IMAGE = STRING(OUTPUT_BASE+'_SOLAR_ZENITH_ANGLE.jpg')
      TITLE  = ' Solar Zenith Angle ('+TITLE_BASE+')'
    ENDELSE

    TT = WHERE(EXTRACT_TOA_NCDF.VAR_SZA[IN_DIR,*] NE MISSING_VALUE_FLT, COUNT)
    PLOT,EXTRACT_TOA_NCDF.VAR_DTIME[TT],EXTRACT_TOA_NCDF.VAR_SZA[IN_DIR,TT],/NODATA,$    
    COLOR = 0, BACKGROUND = 255,$
    YMARGIN = [4,3], $  
    TITLE = TITLE, $
    YTITLE = 'SOLAR ZENITH OVER ROI (DEGREES)',$
    XTITLE = 'DECIMAL YEAR',$
    XRANGE = [ MIN_DATE, MAX_DATE ], $
    XTICKFORMAT='((F8.3))'
  
    OPLOT,EXTRACT_TOA_NCDF.VAR_DTIME[TT],EXTRACT_TOA_NCDF.VAR_SZA[IN_DIR,TT],$
    PSYM = 2,$
    COLOR = 70

    TEMP = TVRD(/TRUE)
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - SOLAR ZENITH OUTPUT AT ',OUTPUT_IMAGE
    WRITE_JPEG,OUTPUT_IMAGE,TEMP,TRUE=1,QUALITY=100
    ERASE 

;-----------------------------------------------
; PLOT SENSOR ZENITH AGAINST DOY

    IF KEYWORD_SET(VERBOSE) THEN BEGIN
      IF NB_DIR GT 1 THEN PRINT, FCT_NAME + ' - PLOTTING SENSOR ZENITH AGAINST DOY, DIRECTION: ',DIR_STR[IN_DIR]  $
                     ELSE PRINT, FCT_NAME + ' - PLOTTING SENSOR ZENITH AGAINST DOY'
    ENDIF

    IF NB_DIR GT 1 THEN BEGIN
      OUTPUT_IMAGE = STRING(OUTPUT_BASE+'_'+DIR_STR[IN_DIR]+'_SENSOR_ZENITH_ANGLE.jpg')
      TITLE  = 'Sensor Zenith Angle - '+DIR_STR[IN_DIR]+' (' + TITLE_BASE + ')'
    ENDIF ELSE BEGIN
      OUTPUT_IMAGE = STRING(OUTPUT_BASE+'_SENSOR_ZENITH_ANGLE.jpg')
      TITLE  = 'Sensor Zenith Angle (' + TITLE_BASE + ')'
    ENDELSE

    TT = WHERE(EXTRACT_TOA_NCDF.VAR_VZA[IN_DIR,*] NE MISSING_VALUE_FLT, COUNT)
    PLOT,EXTRACT_TOA_NCDF.VAR_DTIME[TT],EXTRACT_TOA_NCDF.VAR_VZA[IN_DIR,TT],/NODATA,$
    COLOR = 0, BACKGROUND = 255,$
    YMARGIN = [4,3], $  
    TITLE = TITLE, $
    YTITLE = 'SENSOR ZENITH OVER ROI (DEGREES)',$
    XTITLE = 'DECIMAL YEAR',$
    XRANGE = [ MIN_DATE, MAX_DATE ], $
    XTICKFORMAT='((F8.3))'
  
    OPLOT,EXTRACT_TOA_NCDF.VAR_DTIME[TT],EXTRACT_TOA_NCDF.VAR_VZA[IN_DIR,TT],$
    PSYM = 2,$
    COLOR = 250

    TEMP = TVRD(/TRUE)
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - SENSOR ZENITH OUTPUT AT ',OUTPUT_IMAGE
    WRITE_JPEG,OUTPUT_IMAGE,TEMP,TRUE=1,QUALITY=100
    ERASE 
  
  ENDFOR

;-----------------------------------------------
; RETURN DEVICE WINDOW TO NOMINAL SETTING
 
  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - RESETTING DEVICE WINDOW PROPERTIES'
  IF KEYWORD_SET(NO_ZBUFF) THEN WDELETE
  SET_PLOT, MACHINE_WINDOW
  RETURN, STATUS_OK

END