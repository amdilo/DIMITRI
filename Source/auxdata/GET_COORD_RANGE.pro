;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GET_COORD_RANGE
;*
;* PURPOSE:
;*       FUNCTION TO GET INDEXES OF THE INPUT RANGE VALUES INCLUDED BETWEEN BOTTOM 
;*       AND TOP RANGE VALUES 
;*
;* CALLING SEQUENCE:
;*      VALUES_BETWEEN_LIMITS = GET_COORD_RANGE( RANGE, BOL_VALUE, TOL_VALUE, INDEXES=INDEXES, BORDER_PIX_NB=BORDER_PIX_NB, INDX_WITH_BORDER_PIX_NB=INDX_WITH_BORDER_PIX_NB)
;*
;* INPUTS:
;*      RANGE       - INPUT VALUES
;*      BOL_VALUE   - BOTTOM RANGE LIMIT
;*      TOL_VALUE   - TOP RANGE LIMIT
;*      LON         - POINTS LONGITUDE COORDINATES
;*
;* KEYWORDS:
;*      INDEXES     - INDEXES OF THE INPUT RANGE VALUES INCLUDED BETWEEN BOTTOM 
;*                    AND TOP RANGE VALUES
;*      BORDER_PIX_NB           - NUMBER OF PIXEL ADD TO THE BOTTOM AND TOP LIMITS
;*      INDX_WITH_BORDER_PIX_NB - INDEXES OF THE INPUT RANGE VALUES INCLUDED BETWEEN BOTTOM 
;*                    AND TOP RANGE VALUES WITH BORDER_PIX_NB ADDED
;*
;* OUTPUTS:
;*      VALUES_BETWEEN_LIMITS - LIST OF VALUES BETWEEN TP AND BOTTOM LIMITS
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      ??          - ??                   - CREATION 
;*      22 JAN 2015 - NCG / MAGELLIUM      - UPDATE (DIMITRI V4.0)
;*
;* VALIDATION HISTORY:
;*      30 MAR 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL (DIMITRI V4.0) 
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GET_COORD_RANGE, RANGE, BOL_VALUE, TOL_VALUE, INDEXES=INDEXES, BORDER_PIX_NB=BORDER_PIX_NB, INDX_WITH_BORDER_PIX_NB=INDX_WITH_BORDER_PIX_NB
  
	STATUS_ERROR = GET_DIMITRI_LOCATION('STATUS_ERROR')

  ; SORT FIRST IN ASCENDING ORDER
  INDX_SORT=SORT(RANGE)
  RANGE_SORT=RANGE(INDX_SORT)
  ; RESTRICT RANGE SEARCH (E.G. CASE -INF/INF)
  IF TOL_VALUE GT MAX(RANGE) THEN TOL_VALUE = MAX(RANGE)
  IF BOL_VALUE LT MIN(RANGE) THEN BOL_VALUE = MIN(RANGE)    
  ; FIND BOTTOM LIMIT
  INDEXES_BOL = WHERE(RANGE_SORT LE BOL_VALUE, COUNT)
  IF COUNT EQ 0 THEN RETURN, STATUS_ERROR
  ; FIND UPPER LIMIT
  INDEXES_TOL = WHERE(RANGE_SORT GE TOL_VALUE, COUNT)
  IF COUNT EQ 0 THEN RETURN, STATUS_ERROR
  ; GET LAST BOTTOM VALUE  
  INDEXES_BOL = INDEXES_BOL[N_ELEMENTS(INDEXES_BOL)-1]  ; LAST BOL VALUE
  ; GET FIRST TOP VALUE
  INDEXES_TOL = INDEXES_TOL[0]                          ; FIRST BOL VALUE
  ; CREATE INDEXES BETWEEN TOL AND TOP
  INDEXES_SORT = INDGEN(INDEXES_TOL-INDEXES_BOL+1) + INDEXES_BOL
  ; RESORT INDEXES ACCORDING ORIGINAL ORDER
  INDEXES = INDX_SORT[INDEXES_SORT]
  ; RETURN RANGE VALUES ACCORDING ORIGINAL ORDER
  
  IF KEYWORD_SET(BORDER_PIX_NB) THEN BEGIN
    INDEXES_SORT_WITH_BORDER_PIX_NB = INDGEN(INDEXES_TOL+BORDER_PIX_NB-(INDEXES_BOL-BORDER_PIX_NB)+1) + INDEXES_BOL-BORDER_PIX_NB
    ; RESORT INDEXES ACCORDING ORIGINAL ORDER
    INDX_WITH_BORDER_PIX_NB = INDX_SORT[INDEXES_SORT_WITH_BORDER_PIX_NB]  
  ENDIF
  
  RETURN, RANGE[INDEXES]

END