;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GET_VEGETATION_QUICKLOOK       
;* 
;* PURPOSE:
;*      OUTPUTS A RGB/GRAYSCALE VEGETATION QUICKLOOK WITH ROI OVERLAY IF REQUESTED
;* 
;* CALLING SEQUENCE:
;*      RES = GET_VEGETATION_QUICKLOOK(FILENAME)      
;* 
;* INPUTS:
;*      FILENAME - A SCALAR CONTAINING THE FILENAME OF THE PRODUCT FOR QUICKLOOK GENERATION 
;*
;* KEYWORDS:
;*     RGB          -  PROGRAM GENERATES AN RGB COLOUR QUICKLOOK (DEFAULT IS GRAYSCALE)
;*     ROI          -  OVERLAY COORDINATES OF AN ROI IN RED (REQUIRES ICOORDS)
;*     ICOORDS      -  A 4-ELEMENT ARRAY OF ROI GEOLOCATION (N,S,E,W) 
;*     QL_QUALITY   -  QUALITY OF JPEG GENERATED (100 = MAX, 0 = LOWEST)
;*     ENDIAN_SIZE  -  MACHINE ENDIAN SIZE (0: LITTLE, 1: BIG)
;*     VERBOSE      -  PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*     STATUS       - 1: NOMINAL, (-1) OR 0: ERROR
;*     JPESG ARE AUTOMATICALLY SAVED IN FILENAME FOLDER    
;*
;* COMMON BLOCKS:
;*     NONE 
;*
;* MODIFICATION HISTORY:
;*      17 DEC 2010 - C KENT   - DIMITRI-2 V1.0
;*
;* VALIDATION HISTORY:
;*      01 DEC 2010 - C KENT    - WINDOWS 32-BIT MACHINE IDL 7.1: COMPILATION SUCCESSFUL,
;*                                RGB,ROI,ICOORDS AND QL_QUALITY KEYWORDS TESTED 
;*                                SUCCESSFULLY USING UYUNI COORDINATES
;*      06 JAN 2011 - C KENT    - LINUX 64-BIT MACHINE IDL 8.0: COMPILATION SUCCESSFUL, 
;*                                NO APPARENT DIFFERENCES WHEN COMPARED TO WINDOWS MACHINE
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GET_VEGETATION_QUICKLOOK,FILENAME,OUTPUT_QL_FILENAME,RGB=RGB,ROI=ROI,ICOORDS=ICOORDS,QL_QUALITY=QL_QUALITY,VERBOSE=VERBOSE

	FCT_NAME    = 'GET_VEGETATION_QUICKLOOK'

	STATUS_OK = GET_DIMITRI_LOCATION('STATUS_OK')
	STATUS_ERROR = GET_DIMITRI_LOCATION('STATUS_ERROR')

;------------------------------------------------
; CHECK FILENAME AND IN_BAND ARE NOMINAL

  IF FILENAME EQ '' THEN BEGIN
    PRINT, FCT_NAME + ' - ERROR, INPUT FILENAME INCORRECT'
    RETURN, STATUS_ERROR
  ENDIF

;------------------------------------------------
; SET JPEG QUALITY IF NOT PROVIDED

  IF N_ELEMENTS(QL_QUALITY) EQ 0 THEN QL_QUALITY = 90
  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - JPEG QUALITY = ',QL_QUALITY
  
;------------------------------------------------
; CHECK KEYWORD COMBINATIONS

  IF KEYWORD_SET(ROI) AND N_ELEMENTS(ICOORDS) LT 4 THEN BEGIN
    PRINT,FCT_NAME + ' - ERROR, ROI KEYWORD IS SET BUT COORDINATES INCORRECT'
    RETURN, STATUS_ERROR
  ENDIF
 
;------------------------------------------------
; GET VEGETATION L1B RADIANCE DATA AND DERIVEQUICKLOOK IMAGE

  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - RETRIEVING REFLECTANCE DATA'
  L1B_DATA = GET_VEGETATION_L1B_REFLECTANCE(FILENAME)
  
  IF KEYWORD_SET(RGB) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - RGB JPEG SELECTED'

    QL_DATAR = L1B_DATA[*,*,2]
    QL_DATAG = L1B_DATA[*,*,1]
    QL_DATAB = L1B_DATA[*,*,0]
    
  ENDIF ELSE BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - GRAYSCALE SELECTED'
    QL_DATAR  = L1B_DATA[*,*,2]
  ENDELSE
  
  IF QL_DATAr[0] EQ -1 THEN BEGIN
    PRINT,FCT_NAME + ' - ERROR, PROBLEM ENCOUNTERED DURING L1B RADIANCE RETRIEVAL, CHECK PRODUCTS IS A VEGETATION L1B PRODUCT'
    RETURN, STATUS_ERROR
  ENDIF

  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - GET PRODUCT DIMENSIONS AND DEFINE IMAGE ARRAY'
  QL_DIMS_NEW  = SIZE(QL_DATAR)
  QL_IMAGE = BYTARR(3,QL_DIMS_NEW[1],QL_DIMS_NEW[2])
  
;-----------------------------------------------
; POPULATE THE QUICKLOOK IMAGE ARRAY  

  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - ADD RADIANCE DATA TO IMAGE ARRAY CHANNELS'
  TOP_REF = 250
  IF KEYWORD_SET(RGB) THEN BEGIN 
   
    TEMP_MAX = MAX([MAX(QL_DATAR),MAX(QL_DATAG),MAX(QL_DATAB)])
    TEMP_MAX = 0.85
    QL_IMAGE[0,*,*]=BYTSCL(QL_DATAR,MAX=TEMP_MAX,TOP=TOP_REF)
    QL_IMAGE[1,*,*]=BYTSCL(QL_DATAG,MAX=TEMP_MAX,TOP=TOP_REF)
    QL_IMAGE[2,*,*]=BYTSCL(QL_DATAB,MAX=TEMP_MAX,TOP=TOP_REF)

;----------------------------------------------
; RELEASE MEMORY FOR GREEN AND BLUE CHANNELS
    
    QL_DATAG = 0
    QL_DATAB = 0
    
  ENDIF ELSE BEGIN
  
    TEMP_MAX = 1.0
    QL_IMAGE[0,*,*]=BYTSCL(QL_DATAR,TOP=TOP_REF,MAX=TEMP_MAX)
    QL_IMAGE[1,*,*]=BYTSCL(QL_DATAR,TOP=TOP_REF,MAX=TEMP_MAX)
    QL_IMAGE[2,*,*]=BYTSCL(QL_DATAR,TOP=TOP_REF,MAX=TEMP_MAX)
  ENDELSE

;---------------------------------------------------
; GET LAT/LON DATA FOR ROI PIXEL INDEX IF REQUESTED

  IF KEYWORD_SET(ROI) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - OVERLAY OF ROI SELECTED'
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - RETRIEVING PRODUCT GEOLOCATION'
    
;---------------------------------------------------
; USE GEOLOCATION DATA

    QL_GEO = GET_VEGETATION_LAT_LON(FILENAME)

    QL_GEO_LAT = QL_GEO.LAT
    QL_GEO_LON = QL_GEO.LON

    QL_ROI_IDX = WHERE($
          QL_GEO_LAT LT ICOORDS[0] AND $
          QL_GEO_LAT GT ICOORDS[1] AND $
          QL_GEO_LON LT ICOORDS[2] AND $
          QL_GEO_LON GT ICOORDS[3] )

;---------------------------------------------------
; CONVERT ROI PIXELS TO A LIGHT RED OVERLAY

    IF QL_ROI_IDX[0] GT -1 THEN BEGIN
          IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - MODIFYING RED CHANNEL FOR ROI OVERLAY'
          QL_DATAR = QL_IMAGE[0,*,*]
          QL_DATAR[QL_ROI_IDX]=250
          QL_IMAGE[0,*,*] = QL_DATAR
          ;  QL_DATAR = QL_IMAGE[0,*,*]
          ;  QL_DATAG = QL_IMAGE[1,*,*]
          ;  QL_DATAB = QL_IMAGE[2,*,*]
          
          ; QL_DATAR[QL_ROI_IDX]=250
          ;  QL_DATAG[QL_ROI_IDX]=50
          ;  QL_DATAB[QL_ROI_IDX]=50
          ;  QL_IMAGE[0,*,*] = QL_DATAR
          ;  QL_IMAGE[1,*,*] = QL_DATAG
          ;  QL_IMAGE[2,*,*] = QL_DATAB
          
    ENDIF
  ENDIF

;---------------------------------------------------
; OUTPUT QUICKLOOK AS JPEG

  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - WRITING IMAGE TO JPEG'
  WRITE_JPEG ,OUTPUT_QL_FILENAME,QL_IMAGE,TRUE=1,/ORDER
  
;---------------------------------------------------
; RETURN A POSITIVE VALUE INDICATING QL GENERATION OK

  RETURN, STATUS_OK

END
