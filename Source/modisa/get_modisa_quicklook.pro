;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GET_MODISA_QUICKLOOK       
;* 
;* PURPOSE:
;*      OUTPUTS A RGB MODISA QUICKLOOK WITH ROI OVERLAY IF REQUESTED
;* 
;* CALLING SEQUENCE:
;*      RES = GET_MODISA_QUICKLOOK(FILENAME)      
;* 
;* INPUTS:
;*      FILENAME - A SCALAR CONTAINING THE FILENAME OF THE PRODUCT FOR QUICKLOOK GENERATION 
;*
;* KEYWORDS:
;*     RGB          -  PROGRAM GENERATES AN RGB COLOUR QUICKLOOK (DEFAULT IS GRAYSCALE)
;*     ROI          -  OVERLAY COORDINATES OF AN ROI IN RED (REQUIRES ICOORDS)
;*     ICOORDS      -  A 4-ELEMENT ARRAY OF ROI GEOLOCATION (N,S,E,W) 
;*     QL_QUALITY   -  QUALITY OF JPEG GENERATED (100 = MAX, 0 = LOWEST)
;*     VERBOSE      - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*     STATUS       - 1: NOMINAL, (-1) OR 0: ERROR
;*     JPESG ARE AUTOMATICALLY SAVED IN FILENAME FOLDER    
;*
;* COMMON BLOCKS:
;*     NONE 
;*
;* MODIFICATION HISTORY:
;*      13 FEB 2002 - M BOUVET - PROTOTYPE DIMITRI VERSION
;*      07 DEC 2010 - C KENT   - DIMITRI-2 V1.0
;*      18 MAR 2011 - C KENT   - MODIFIED RGB GENERATION
;*      10 FEB 2015 - NCG / MAGELLIUM - REMOVE FILENAME CONSTRUCTION (DIMITRI V4.0)
;*
;* VALIDATION HISTORY:
;*      01 DEC 2010 - C KENT   - WINDOWS 32-BIT MACHINE, COMPILATION SUCCESSFUL. ALL KEYWORD 
;*                               COMBINATIONS TESTED FOR A PRODUCT OVER UYUNI
;*      05 JAN 2011 - C KENT   - LINUX 64-BIT MACHINE IDL 8.0: COMPILATION SUCCESSFUL, 
;*                               NO APPARENT DIFFERENCES WHEN COMPARED TO WINDOWS MACHINE
;*      20 JAN 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL 
;*      30 MAR 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL (DIMITRI V4.0) 
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GET_MODISA_QUICKLOOK,FILENAME,OUTPUT_QL_FILENAME,RGB=RGB,ROI=ROI,ICOORDS=ICOORDS,QL_QUALITY=QL_QUALITY,VERBOSE=VERBOSE

  FCT_NAME = 'GET_MODISA_QUICKLOOK'

	STATUS_OK = GET_DIMITRI_LOCATION('STATUS_OK')
	STATUS_ERROR = GET_DIMITRI_LOCATION('STATUS_ERROR')

;------------------------------------------------
; CHECK FILENAME IS NOMINAL

  IF FILENAME EQ '' THEN BEGIN
    PRINT, FCT_NAME + ' - ERROR, INPUT FILENAME INCORRECT'
    RETURN, STATUS_ERROR
  ENDIF

;------------------------------------------------
; SET JPEG QUALITY IF NOT PROVIDED

  IF N_ELEMENTS(QL_QUALITY) EQ 0 THEN QL_QUALITY = 90
  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - JPEG QUALITY = ',QL_QUALITY
  
;------------------------------------------------
; CHECK KEYWORD COMBINATIONS

  IF KEYWORD_SET(ROI) AND N_ELEMENTS(ICOORDS) LT 4 THEN BEGIN
    PRINT,FCT_NAME + ' - ERROR, ROI KEYWORD IS SET BUT COORDINATES INCORRECT'
    RETURN, STATUS_ERROR
  ENDIF
  
;------------------------------------------------
; GET MODISA L1B RADIANCE DATA AND DERIVE QUICKLOOK IMAGE

  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - RETRIEVING RADIANCE DATA'  
  IF KEYWORD_SET(RGB) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - RGB JPEG SELECTED'
    QL_DATAR = GET_MODISA_L1B_RADIANCE(FILENAME,0,/RES_250m,/VERBOSE)
    QL_DATAG = GET_MODISA_L1B_RADIANCE(FILENAME,1,/RES_500m,/VERBOSE)
    QL_DATAB = GET_MODISA_L1B_RADIANCE(FILENAME,0,/RES_500m,/VERBOSE)
  ENDIF ELSE BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - GRAYSCALE SELECTED'
    QL_DATAR  = GET_MODISA_L1B_RADIANCE(FILENAME,12,/RES_1KM,/VERBOSE)
  ENDELSE
  
  IF QL_DATAR[0] EQ -1 THEN BEGIN
    PRINT,FCT_NAME + ' - ERROR, PROBLEM ENCOUNTERED DURING L1B RADIANCE RETRIEVAL, CHECK PRODUCTS IS A MODISAS L1B PRODUCT'
    RETURN, STATUS_ERROR
  ENDIF

;----------------------------------------------
; RELEASE MEMORY FOR TOA_REFLECTANCE

  QL_TOA_REF = 0
  
  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - GET PRODUCT DIMENSIONS AND DEFINE IMAGE ARRAY'
  QL_DIMS  = SIZE(QL_DATAR)
  QL_IMAGE = BYTARR(3,QL_DIMS[1],QL_DIMS[2])
  
;-----------------------------------------------
; POPULATE THE QUICKLOOK IMAGE ARRAY  

  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - ADD RADIANCE DATA TO IMAGE ARRAY CHANNELS'
  IF KEYWORD_SET(RGB) THEN BEGIN 
 
    QL_IMAGE[0,*,*]=BYTSCL(QL_DATAR)
    QL_IMAGE[1,*,*]=BYTSCL(QL_DATAG)
    QL_IMAGE[2,*,*]=BYTSCL(QL_DATAB)
    
;----------------------------------------------
; RELEASE MEMORY FOR GREEN AND BLUE CHANNELS
    
    QL_DATAG = 0
    QL_DATAB = 0
    
  ENDIF ELSE BEGIN
  
    QL_IMAGE[0,*,*]=BYTE(QL_DATAR)
    QL_IMAGE[1,*,*]=BYTE(QL_DATAR)
    QL_IMAGE[2,*,*]=BYTE(QL_DATAR)
 
 
  ENDELSE

 ; QL_IMAGE=BYTSCL(QL_IMAGE,TOP=220)

;---------------------------------------------------
; GET LAT/LON DATA FOR ROI PIXEL INDEX IF REQUESTED

  IF KEYWORD_SET(ROI) THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - OVERLAY OF ROI SELECTED'
    IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - RETRIEVING PRODUCT GEOLOCATION'
    QL_GEO = GET_MODISA_LAT_LON(FILENAME)
     
;---------------------------------------------------
; FIND LOCATION OF ROI

    QL_ROI_IDX = WHERE($
          QL_GEO.LAT LT ICOORDS[0] AND $
          QL_GEO.LAT GT ICOORDS[1] AND $
          QL_GEO.LON LT ICOORDS[2] AND $
          QL_GEO.LON GT ICOORDS[3] )

;---------------------------------------------------
; CONVERT ROI PIXELS TO A LIGHT RED OVERLAY

    IF QL_ROI_IDX[0] GT -1 THEN BEGIN
          IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - MODIFYING RED CHANNEL FOR ROI OVERLAY'
          ;IF KEYWORD_SET(RGB) THEN BEGIN
            ;QL_DATAR = BYTE(QL_DATAR)
            QL_DATAR = QL_IMAGE[0,*,*]
            QL_DATAG = QL_IMAGE[1,*,*]
            QL_DATAB = QL_IMAGE[2,*,*]
          ;ENDIF ELSE QL_DATAR = BYTSCL(QL_DATAR,MAX=TEMP_MAX)
          
          QL_DATAR[QL_ROI_IDX]=100   ;250
          QL_DATAG[QL_ROI_IDX]=BYTSCL(QL_DATAG[QL_ROI_IDX],TOP=75)
          QL_DATAB[QL_ROI_IDX]=BYTSCL(QL_DATAB[QL_ROI_IDX],TOP=75)
          QL_IMAGE[0,*,*] = QL_DATAR
          QL_IMAGE[1,*,*] = QL_DATAG
          QL_IMAGE[2,*,*] = QL_DATAB
          
          
    ENDIF

  IF (QL_GEO.LAT[2,QL_DIMS[2]-3]) GT (QL_GEO.LAT[2,2]) THEN ORDER=1 ELSE ORDER=0

  ENDIF

;---------------------------------------------------
; OUTPUT QUICKLOOK AS JPEG

  IF KEYWORD_SET(VERBOSE) THEN PRINT, FCT_NAME + ' - WRITING IMAGE TO JPEG'
  WRITE_JPEG ,OUTPUT_QL_FILENAME,REVERSE(REVERSE(QL_IMAGE,3),2),TRUE=1,/ORDER
  
;---------------------------------------------------
; RETURN A POSITIVE VALUE INDICATING QL GENERATION OK

  RETURN, STATUS_OK

END
