;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      CLOUD_LOCALSTD       
;* 
;* PURPOSE:
;*      THIS FUNCTION PERFORMS statistics 
;* 
;* CALLING SEQUENCE:
;*      RES = CLOUD_LOCALSTD(REF, SZ) 
;* 
;* INPUTS:
;*      REF        - A FLOAT ARRAY CONTAINING THE TOA REFLECTANCE AT 870NM,
;*      SZ        - Size of the movinf WINDOW
;*
;* KEYWORDS:
;*      VERBOSE    - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      AVG, STD -  WINDOW AVERAGE and STD
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      XX  2013 - C BERTHELOT   - DIMITRI-3 V1.0

;*
;* VALIDATION HISTORY:
;*      XX - B BERTHELOT   - NOMINAL COMPILATION AND OPERATION ON WINDOWS 32BIT 
;*                           IDL 7.1 AND LINUX 64BIT IDL 8.0
;*      20 JAN 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL 
;*      30 MAR 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL (DIMITRI V4.0) 
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION CLOUD_LOCALSTD,REF,SZ

S=SIZE(REF)

NX = S[1] 
NY = S[2]

KER= MAKE_ARRAY(SZ,SZ,/FLOAT,VALUE=1)
OUTPUT_ARRAY= MAKE_ARRAY(2,NX,NY,/FLOAT,VALUE=-999)
MOY= MAKE_ARRAY(NX,NY,/FLOAT,VALUE=-999)
AVG1= MAKE_ARRAY(NX,NY,/FLOAT,VALUE=-999)
NB= MAKE_ARRAY(NX,NY,/FLOAT,VALUE=-999)
TMP= MAKE_ARRAY(NX,NY,/FLOAT,VALUE=-999)
AVG2= MAKE_ARRAY(NX,NY,/FLOAT,VALUE=-999)

;KER=KER/TOTAL(KER);

MASK=REF GT 0 ;
NB=CONVOL(MASK,KER,/EDGE_ZERO,INVALID=0,MISSING=0);
AVG1=CONVOL(REF,KER,/EDGE_ZERO,INVALID=0,MISSING=0);

IDNB= WHERE(NB GT 0,NB_COUNT,COMPLEMENT=IDNB0, NCOMPLEMENT=NB0_COUNT)

;MOY=AVG1/NB
  IF NB_COUNT  NE 0 THEN MOY[IDNB]  = AVG1[IDNB]/NB[IDNB] ;
  IF NB0_COUNT NE 0 THEN MOY[IDNB0] = 0 ;
  

;MOY=AVG1/NB

;AVG1=CONVOL(REF,KER,/EDGE_ZERO,INVALID=-999);
;AVG1=CONVOL(REF,KER,/EDGE_ZERO,/NORMALIZE,INVALID=-999);
;AVG1=CONVOL(REF,KER,/EDGE_ZERO,INVALID=0,MISSING=0);

AVG2=CONVOL(REF*REF,KER,/EDGE_ZERO,INVALID=0,MISSING=0);

;TMP=AVG2/NB-MOY^2;

  IF NB_COUNT  NE 0 THEN TMP[IDNB]  = AVG2[IDNB]/NB[IDNB]-MOY[IDNB]^2;
  IF NB0_COUNT NE 0 THEN TMP[IDNB0]  = 0 ;

ID= WHERE(TMP LT 0,COUNT)
;id= find(tmp < 0);

;SIGMA1=sqrt(AVG2/NB-MOY^2);
SIGMA1=sqrt(TMP);

   IF COUNT   NE 0 THEN SIGMA1[ID]  = -999

; build an array with the two outputs

OUTPUT_ARRAY[0,*,*]=MOY;
OUTPUT_ARRAY[1,*,*]=SIGMA1;

RETURN, OUTPUT_ARRAY

END