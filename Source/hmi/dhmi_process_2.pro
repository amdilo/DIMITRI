;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      DHMI_PROCESS_2    
;* 
;* PURPOSE:
;*      THIS PROGRAM DISPLAYS A WIDGET ALLOWING SPECIFICATION OF THE REQUIRED PARAMETERS 
;*      TO PERFORM THE VEGETATION TOA SIMULATION USING BRDF MODELS GENERATED WITH SUPER 
;*      SENSOR DATA WITH MERIS AND AATSR AND THE REFERENCE SENSORS
;*
;* CALLING SEQUENCE:
;*      DHMI_PROCESS_2      
;*
;* INPUTS:
;*      NONE
;*
;* KEYWORDS:
;*      GROUP_LEADER - THE ID OF ANOTHER WIDGET TO BE USED AS THE GROUP LEADER
;*      VERBOSE      - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      NONE
;*
;* COMMON BLOCKS:
;*      DHMI_DATABASE - CONTAINS THE DATABASE DATA FOR THE DIMITRI HMI
;*
;* MODIFICATION HISTORY:
;*      17 MAY 2011 - C KENT    - DIMITRI-2 V1.0
;*      06 JUL 2011 - C KENT    - ADDED DATABASE COMMON BLOCK TO DIMITRI HMI
;*      25 OCT 2011 - C KENT    - ADDED ABSOLUTE VGT ANGLE CRITERIA
;*
;* VALIDATION HISTORY:
;*      17 MAY 2011 - C KENT    - WINDOWS 32-BIT IDL 7.1 AND LINUX 64-BIT IDL 8.0 NOMINAL
;*                                COMPILATION AND OPERATION       
;*
;**************************************************************************************
;**************************************************************************************

PRO DHMI_PROCESS_2_START,EVENT
 
COMMON DHMI_DATABASE 
 
 ;--------------------------
 ; RETRIEVE WIDGET INFORMATION
 
   WIDGET_CONTROL, EVENT.TOP,  GET_UVALUE=DHMI_P2_INFO, /NO_COPY

;---------------------------
; RETRIEVE ALL PARAMETERS

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->START: RETRIEVING PARAMETERS FROM WIDGET FIELDS' 
  DHMI_P2_INFO.FSCP2_MFOLDER->GETPROPERTY,    VALUE=MFOLDER
  DHMI_P2_INFO.FSCP2_AFOLDER->GETPROPERTY,    VALUE=AFOLDER
  DHMI_P2_INFO.FSCP2_SITE->GETPROPERTY,       VALUE=SITE
  DHMI_P2_INFO.FSCP2_MERIS->GETPROPERTY,      VALUE=MER_CFIG
  DHMI_P2_INFO.FSCP2_AATSR->GETPROPERTY,      VALUE=ATS_CFIG
  DHMI_P2_INFO.FSCP2_VGT->GETPROPERTY,        VALUE=VGT_CFIG
  DHMI_P2_INFO.FSCP2_BBP->GETPROPERTY,        VALUE=BIN_PERIOD
  DHMI_P2_INFO.FSCP2_BAL->GETPROPERTY,        VALUE=ACQUILIMIT
  DHMI_P2_INFO.FSCP2_CLOUD->GETPROPERTY,      VALUE=CSPERCENT
  DHMI_P2_INFO.FSCP2_ROI->GETPROPERTY,        VALUE=ROIPERCENT
  DHMI_P2_INFO.FSCP2_VZAMIN->GETPROPERTY,     VALUE=VZAMIN
  DHMI_P2_INFO.FSCP2_VZAMAX->GETPROPERTY,     VALUE=VZAMAX
  DHMI_P2_INFO.FSCP2_VAAMIN->GETPROPERTY,     VALUE=VAAMIN
  DHMI_P2_INFO.FSCP2_VAAMAX->GETPROPERTY,     VALUE=VAAMAX
  DHMI_P2_INFO.FSCP2_SZAMIN->GETPROPERTY,     VALUE=SZAMIN
  DHMI_P2_INFO.FSCP2_SZAMAX->GETPROPERTY,     VALUE=SZAMAX
  DHMI_P2_INFO.FSCP2_SAAMIN->GETPROPERTY,     VALUE=SAAMIN
  DHMI_P2_INFO.FSCP2_SAAMAX->GETPROPERTY,     VALUE=SAAMAX
  IF DHMI_P2_INFO.CURRENT_BUTTON EQ DHMI_P2_INFO.DHMI_P2_TLB_PLT1 THEN BPLOT = 0 ELSE BPLOT = 1
  
;---------------------------
; CHECK FOLDER VALUES - UPDATE, ONLY CHECK MERIS FOLDER

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->START: CHECKING FOLDER VALUES' 
  ;CHECK = [MFOLDER,AFOLDER,SITE,MER_CFIG,ATS_CFIG,VGT_CFIG]
  CHECK = [MFOLDER,SITE,MER_CFIG,VGT_CFIG]
  RES = WHERE(CHECK EQ DHMI_P2_INFO.NA_STR,COUNT)
  IF COUNT GT 0 THEN BEGIN
    MSG = ['INPUT ERROR', 'N/A VALUES ARE NOT VALID PARAMETERS']
    TEMP = DIALOG_MESSAGE(MSG,/INFORMATION,/CENTER)
  GOTO,SKIP_P2_START
  ENDIF

;---------------------------
; CHECK USER VALUES

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->START: CHECKING USER PARAMETERS' 
  IF BIN_PERIOD LT 0.0 OR $
     ACQUILIMIT LT 0.0 OR $
     CSPERCENT  LT 0.0 OR $
     ROIPERCENT LT 0.0 THEN BEGIN
  
    MSG = ['INPUT ERROR', 'NEGATIVE VALUES ARE NOT VALID PARAMETERS']
    TEMP = DIALOG_MESSAGE(MSG,/INFORMATION,/CENTER)
    GOTO,SKIP_P2_START
  ENDIF

;---------------------------
; SORT OUT THE FOLDER NAMES

  MFOLDER = DHMI_P2_INFO.MAIN_OUTPUT+MFOLDER+DHMI_P2_INFO.DL
  AFOLDER = DHMI_P2_INFO.MAIN_OUTPUT+AFOLDER+DHMI_P2_INFO.DL

;---------------------------
; SORT OUT CONFIGURATIONS

  TMP = 6 
  MER_CFIG = STRMID(MER_CFIG,TMP,STRLEN(MER_CFIG)-TMP)
  IF ATS_CFIG NE DHMI_P2_INFO.NA_STR THEN ATS_CFIG = STRMID(ATS_CFIG,TMP,STRLEN(ATS_CFIG)-TMP)

;--------------------------
; GET SCREEN DIMENSIONS FOR 
; CENTERING INFO WIDGET

  DIMS  = GET_SCREEN_SIZE()
  XSIZE = 200
  YSIZE = 60
  XLOC  = (DIMS[0]/2)-(XSIZE/2)
  YLOC  = (DIMS[1]/2)-(YSIZE/2)

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->START: CREATING AN INFO WIDGET'
  INFO_WD = WIDGET_BASE(COLUMN=1, XSIZE=XSIZE, YSIZE=YSIZE, TITLE='Please Wait...',XOFFSET=XLOC,YOFFSET=YLOC)
  LBLTXT  = WIDGET_LABEL(INFO_WD,VALUE=' ')
  LBLTXT  = WIDGET_LABEL(INFO_WD,VALUE='Please wait,')
  LBLTXT  = WIDGET_LABEL(INFO_WD,VALUE='Processing...')
  WIDGET_CONTROL, INFO_WD, /REALIZE
  WIDGET_CONTROL, /HOURGLASS

;---------------------------
; RUN BRDF COMPUTATIONS AND CHECK RETURNED VALUES

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->START: STARTING BRDF INTERFACE MODULES' 
    MRES = DIMITRI_INTERFACE_ROUJEAN(MFOLDER,SITE,DHMI_P2_INFO.MER_SENSOR,MER_CFIG,$
          BRDF_BIN=BIN_PERIOD,BRDF_LIM=ACQUILIMIT,NO_PLOTS=BPLOT,VERBOSE=DHMI_P2_INFO.IVERBOSE)

  IF ATS_CFIG NE DHMI_P2_INFO.NA_STR THEN $
    ARES = DIMITRI_INTERFACE_ROUJEAN(AFOLDER,SITE,DHMI_P2_INFO.ATS_SENSOR,ATS_CFIG,$
          BRDF_BIN=BIN_PERIOD,BRDF_LIM=ACQUILIMIT,NO_PLOTS=BPLOT,VERBOSE=DHMI_P2_INFO.IVERBOSE) ELSE ARES=1

  IF MRES LE 0 OR ARES LE 0 THEN BEGIN
    MSG = ['BRDF ERROR', 'ERRORS REPORTED DURING BRDF COMPUTATION, PLEASE CHECK OUTPUTS']
    TEMP = DIALOG_MESSAGE(MSG,/INFORMATION,/CENTER)
    GOTO,SKIP_P2_START
  ENDIF

;---------------------------
; RUN PROCESS 2 AND CHECK OUTPUT

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->START: STARTING VGT SIMULATION MODULE' 
  VRES = VGT_SIMULATION(SITE,MFOLDER,MER_CFIG,AFOLDER,ATS_CFIG,VGT_CFIG,$
                          CSPERCENT,ROIPERCENT,BIN_PERIOD,$
                          VZAMIN,VZAMAX,VAAMIN,VAAMAX,SZAMIN,SZAMAX,SAAMIN,SAAMAX,$
                          VERBOSE=DHMI_P2_INFO.IVERBOSE)

  IF VRES LE 0 THEN BEGIN
    MSG = ['TOA SIMULATION ERROR', 'ERRORS REPORTED DURING TOA SIMULATION, PLEASE CHECK OUTPUTS']
    TEMP = DIALOG_MESSAGE(MSG,/INFORMATION,/CENTER)
  ENDIF

;--------------------------
; DESTROY INFO WIDGET AND RETURN 
; TO PROCESS_1 WIDGET

  SKIP_P2_START:
    IF N_ELEMENTS(INFO_WD) GT 0 THEN WIDGET_CONTROL,INFO_WD,/DESTROY
  WIDGET_CONTROL, EVENT.TOP, SET_UVALUE=DHMI_P2_INFO, /NO_COPY

END

;**************************************************************************************
;**************************************************************************************

PRO DHMI_PROCESS_2_EXIT,EVENT

COMMON DHMI_DATABASE

;--------------------------
; RETRIEVE WIDGET INFORMATION

  WIDGET_CONTROL, EVENT.TOP,  GET_UVALUE=DHMI_P2_INFO, /NO_COPY
  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->EXIT: DESTROYING OBJECTS'

;--------------------------
; DESTROY OBJECTS

  OBJ_DESTROY,DHMI_P2_INFO.FSCP2_MFOLDER
  OBJ_DESTROY,DHMI_P2_INFO.FSCP2_AFOLDER
  OBJ_DESTROY,DHMI_P2_INFO.FSCP2_SITE
  OBJ_DESTROY,DHMI_P2_INFO.FSCP2_MERIS
  OBJ_DESTROY,DHMI_P2_INFO.FSCP2_AATSR
  OBJ_DESTROY,DHMI_P2_INFO.FSCP2_VGT
  OBJ_DESTROY,DHMI_P2_INFO.FSCP2_BBP
  OBJ_DESTROY,DHMI_P2_INFO.FSCP2_BAL
  OBJ_DESTROY,DHMI_P2_INFO.FSCP2_CLOUD
  OBJ_DESTROY,DHMI_P2_INFO.FSCP2_ROI

;--------------------------
; DESTROY THE WIDGET

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->EXIT: DESTROYING PROCESS 1 WIDGET'
  WIDGET_CONTROL,EVENT.TOP,/DESTROY

END

;**************************************************************************************
;**************************************************************************************

PRO DHMI_PROCESS_2_PLOTS,EVENT

COMMON DHMI_DATABASE

;--------------------------
; GET EVENT AND WIDGET INFO

  WIDGET_CONTROL, EVENT.TOP, GET_UVALUE=DHMI_P2_INFO, /NO_COPY

;---------------------
; UPDATE CURRENT_BUTTON WITH SELECTION

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->PLOTS: UPDATING CURRENT BUTTON SELECTION'
  DHMI_P2_INFO.CURRENT_BUTTON = EVENT.ID
  WIDGET_CONTROL, EVENT.TOP, SET_UVALUE=DHMI_P2_INFO, /NO_COPY

END

;**************************************************************************************
;**************************************************************************************

PRO DHMI_PROCESS_2_UPDATE_MFOLDER,EVENT

COMMON DHMI_DATABASE

;--------------------------
; RETRIEVE WIDGET INFORMATION

  WIDGET_CONTROL, EVENT.TOP,  GET_UVALUE=DHMI_P2_INFO, /NO_COPY
  WIDGET_CONTROL, EVENT.ID,   GET_UVALUE=ACTION

;--------------------------
; UPDATE THE ROI FIELD INDEX

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->MFOLDER: UPDATING FOLDER FIELD'
  CASE ACTION OF
    '>':DHMI_P2_INFO.MER_FOLDER_ID = DHMI_P2_INFO.MER_FOLDER_ID+1
    '<':DHMI_P2_INFO.MER_FOLDER_ID = DHMI_P2_INFO.MER_FOLDER_ID-1
  ENDCASE
  IF DHMI_P2_INFO.MER_FOLDER_ID LT 0 THEN DHMI_P2_INFO.MER_FOLDER_ID = DHMI_P2_INFO.NA_OFOLDERS-1
  IF DHMI_P2_INFO.MER_FOLDER_ID EQ DHMI_P2_INFO.NA_OFOLDERS THEN DHMI_P2_INFO.MER_FOLDER_ID = 0 

;--------------------------
; UPDATE THE VALUE

  DHMI_P2_INFO.FSCP2_MFOLDER->SETPROPERTY, VALUE=DHMI_P2_INFO.AVAILABLE_OFOLDERS[DHMI_P2_INFO.MER_FOLDER_ID]
  NEW_DATA_FILES = FILE_SEARCH(DHMI_P2_INFO.MAIN_OUTPUT+DHMI_P2_INFO.AVAILABLE_OFOLDERS[DHMI_P2_INFO.MER_FOLDER_ID],DHMI_P2_INFO.SSEN_STR)

;--------------------------
; RESET ALL MERIS CONFIG PARAMETERS

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->MFOLDER: RESETTING ALL FIELDS AND ARRAYS'
  DHMI_P2_INFO.NA_MSENS = 1 & DHMI_P2_INFO.MERIS_ID = 0 & DHMI_P2_INFO.AVAILABLE_MSENS[*] = DHMI_P2_INFO.NA_STR
  DHMI_P2_INFO.NA_SITES = 1 & DHMI_P2_INFO.SITE_ID = 0  & DHMI_P2_INFO.AVAILABLE_SITES[*] = DHMI_P2_INFO.NA_STR 
  DHMI_P2_INFO.NA_VSENS = 1 & DHMI_P2_INFO.VGT_ID = 0   & DHMI_P2_INFO.AVAILABLE_VSENS[*] = DHMI_P2_INFO.NA_STR
  
  IF NEW_DATA_FILES[0] EQ '' THEN GOTO,NO_MDATA_UPDATE

;--------------------------
; GET THE UNIQ MERIS CONFIGS AVAILABLE

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->MFOLDER: RETRIEVING UNIQ MERIS CONFIGURATIONS'  
  PVER = '' & PSIT = ''
  FOR JJ=0,N_ELEMENTS(NEW_DATA_FILES)-1 DO BEGIN
    TEMP = STRSPLIT(NEW_DATA_FILES[jj],DHMI_P2_INFO.DL,/EXTRACT)
    TEMP = TEMP[N_ELEMENTS(TEMP)-1]
    TEMP = STRSPLIT(TEMP,'_',/EXTRACT)
    PSIT = [PSIT,TEMP[1]]
    PVER = [PVER,strjoin(temp[3:n_elements(temp)-2],'_')]
  ENDFOR
  
  PVER = PVER[1:N_ELEMENTS(PVER)-1]
  PVER = PVER[UNIQ(PVER,SORT(PVER))]
  PSIT = PSIT[1:N_ELEMENTS(PSIT)-1]
  PSIT = PSIT[UNIQ(PSIT,SORT(PSIT))]

;--------------------------
; UPDATE THE FIELD VALUES

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->MFOLDER: UPDATING FIELD VALUES'
  DHMI_P2_INFO.NA_SITES = N_ELEMENTS(PSIT)
  DHMI_P2_INFO.SITE_ID  = 0
  DHMI_P2_INFO.AVAILABLE_SITES[0:N_ELEMENTS(PSIT)-1] = PSIT 
  CURRENT_SITE          = DHMI_P2_INFO.AVAILABLE_SITES[DHMI_P2_INFO.SITE_ID]

  RES = WHERE(STRMID(PVER,0,5) EQ DHMI_P2_INFO.MER_SENSOR,COUNT)
  IF COUNT EQ 0 THEN GOTO, NO_MDATA_UPDATE

  DHMI_P2_INFO.NA_MSENS = COUNT
  DHMI_P2_INFO.MERIS_ID = 0
  DHMI_P2_INFO.AVAILABLE_MSENS[0:COUNT-1] = PVER

  RES = WHERE(DHMI_DB_DATA.REGION EQ CURRENT_SITE AND DHMI_DB_DATA.SENSOR EQ DHMI_P2_INFO.VGT_SENSOR,COUNT)
  IF COUNT GT 0 THEN BEGIN
    TEMP = DHMI_DB_DATA.PROCESSING_VERSION[RES]
    TEMP = TEMP[UNIQ(TEMP,SORT(TEMP))]
    DHMI_P2_INFO.NA_VSENS = N_ELEMENTS(TEMP)
    DHMI_P2_INFO.AVAILABLE_VSENS[0:DHMI_P2_INFO.NA_VSENS-1] = TEMP
  ENDIF

;--------------------------
; RELOAD THE WIDGET

  NO_MDATA_UPDATE:
  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->MFOLDER: RELOADING THE WIDGET'
  DHMI_P2_INFO.FSCP2_MERIS->SETPROPERTY,  VALUE=DHMI_P2_INFO.AVAILABLE_MSENS[DHMI_P2_INFO.MERIS_ID]
  DHMI_P2_INFO.FSCP2_SITE->SETPROPERTY,   VALUE=DHMI_P2_INFO.AVAILABLE_SITES[DHMI_P2_INFO.SITE_ID]
  DHMI_P2_INFO.FSCP2_VGT->SETPROPERTY,    VALUE=DHMI_P2_INFO.AVAILABLE_VSENS[DHMI_P2_INFO.VGT_ID]
  WIDGET_CONTROL, EVENT.TOP, SET_UVALUE=DHMI_P2_INFO, /NO_COPY

END

;**************************************************************************************
;**************************************************************************************

PRO DHMI_PROCESS_2_UPDATE_AFOLDER,EVENT

COMMON DHMI_DATABASE

;--------------------------
; RETRIEVE WIDGET INFORMATION

  WIDGET_CONTROL, EVENT.TOP,  GET_UVALUE=DHMI_P2_INFO, /NO_COPY
  WIDGET_CONTROL, EVENT.ID,   GET_UVALUE=ACTION

;--------------------------
; UPDATE THE ROI FIELD INDEX

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->AFOLDER: UPDATING FOLDER FIELD'
  CASE ACTION OF
    '>':DHMI_P2_INFO.ATS_FOLDER_ID = DHMI_P2_INFO.ATS_FOLDER_ID+1
    '<':DHMI_P2_INFO.ATS_FOLDER_ID = DHMI_P2_INFO.ATS_FOLDER_ID-1
  ENDCASE
  IF DHMI_P2_INFO.ATS_FOLDER_ID LT 0 THEN DHMI_P2_INFO.ATS_FOLDER_ID = DHMI_P2_INFO.NA_OFOLDERS-1
  IF DHMI_P2_INFO.ATS_FOLDER_ID EQ DHMI_P2_INFO.NA_OFOLDERS THEN DHMI_P2_INFO.ATS_FOLDER_ID = 0 

;--------------------------
; UPDATE THE VALUE

  DHMI_P2_INFO.FSCP2_AFOLDER->SETPROPERTY, VALUE=DHMI_P2_INFO.AVAILABLE_OFOLDERS[DHMI_P2_INFO.ATS_FOLDER_ID]
  NEW_DATA_FILES = FILE_SEARCH(DHMI_P2_INFO.MAIN_OUTPUT+DHMI_P2_INFO.AVAILABLE_OFOLDERS[DHMI_P2_INFO.ATS_FOLDER_ID],DHMI_P2_INFO.SSEN_STR)

;--------------------------
; RESET ALL AATSR CONFIG PARAMETERS

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->AFOLDER: RESETTING PARAMETERS'
  DHMI_P2_INFO.NA_ASENS = 1 & DHMI_P2_INFO.AATSR_ID = 0 & DHMI_P2_INFO.AVAILABLE_ASENS[*] = DHMI_P2_INFO.NA_STR
  IF NEW_DATA_FILES[0] EQ '' THEN GOTO,NO_ADATA_UPDATE

;---------------------------
; GET THE UNIQ AATSR CONFIGS AVAILABLE

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->AFOLDER: RETRIEVING UNIQ AATSR CONFIGS'
  PVER = '' & PSIT = ''
  FOR JJ=0,N_ELEMENTS(NEW_DATA_FILES)-1 DO BEGIN
    TEMP = STRSPLIT(NEW_DATA_FILES[JJ],DHMI_P2_INFO.DL,/EXTRACT)
    TEMP = TEMP[N_ELEMENTS(TEMP)-1]
    TEMP = STRSPLIT(TEMP,'_',/EXTRACT)
    PSIT = [PSIT,TEMP[1]]
    PVER = [PVER,STRJOIN(TEMP[3:N_ELEMENTS(TEMP)-2],'_')]
  ENDFOR

  PVER = PVER[1:N_ELEMENTS(PVER)-1]
  PVER = PVER[UNIQ(PVER,SORT(PVER))]
  RES = WHERE(STRMID(PVER,0,5) EQ DHMI_P2_INFO.ATS_SENSOR,COUNT)
  IF COUNT EQ 0 THEN GOTO, NO_ADATA_UPDATE

  DHMI_P2_INFO.NA_ASENS = COUNT
  DHMI_P2_INFO.AATSR_ID = 0
  DHMI_P2_INFO.AVAILABLE_ASENS[0:COUNT-1] = PVER

;---------------------------
; RELOAD THE WIDGET

  NO_ADATA_UPDATE:
  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->AFOLDER: RELOADING THE WIDGET'
  DHMI_P2_INFO.FSCP2_AATSR->SETPROPERTY, VALUE=DHMI_P2_INFO.AVAILABLE_ASENS[DHMI_P2_INFO.AATSR_ID]
  WIDGET_CONTROL, EVENT.TOP, SET_UVALUE=DHMI_P2_INFO, /NO_COPY

END

;**************************************************************************************
;**************************************************************************************

PRO DHMI_PROCESS_2_UPDATE_MERIS,EVENT

;--------------------------
; RETRIEVE WIDGET INFORMATION

  WIDGET_CONTROL, EVENT.TOP,  GET_UVALUE=DHMI_P2_INFO, /NO_COPY
  WIDGET_CONTROL, EVENT.ID,   GET_UVALUE=ACTION

;--------------------------
; UPDATE THE ROI FIELD INDEX

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->MERIS: UPDATING MERIS FIELD'
  CASE ACTION OF
    '>':DHMI_P2_INFO.MERIS_ID = DHMI_P2_INFO.MERIS_ID+1
    '<':DHMI_P2_INFO.MERIS_ID = DHMI_P2_INFO.MERIS_ID-1
  ENDCASE
  IF DHMI_P2_INFO.MERIS_ID LT 0 THEN DHMI_P2_INFO.MERIS_ID = DHMI_P2_INFO.NA_MSENS-1
  IF DHMI_P2_INFO.MERIS_ID EQ DHMI_P2_INFO.NA_MSENS THEN DHMI_P2_INFO.MERIS_ID = 0 

;--------------------------
; UPDATE THE VALUE

  DHMI_P2_INFO.FSCP2_MERIS->SETPROPERTY, VALUE=DHMI_P2_INFO.AVAILABLE_MSENS[DHMI_P2_INFO.MERIS_ID]
  WIDGET_CONTROL, EVENT.TOP, SET_UVALUE=DHMI_P2_INFO, /NO_COPY

END

;**************************************************************************************
;**************************************************************************************

PRO DHMI_PROCESS_2_UPDATE_AATSR,EVENT

;--------------------------
; RETRIEVE WIDGET INFORMATION

  WIDGET_CONTROL, EVENT.TOP,  GET_UVALUE=DHMI_P2_INFO, /NO_COPY
  WIDGET_CONTROL, EVENT.ID,   GET_UVALUE=ACTION

;--------------------------
; UPDATE THE ROI FIELD INDEX

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->AATSR: UPDATING AATSR FIELD'
  CASE ACTION OF
    '>':DHMI_P2_INFO.AATSR_ID = DHMI_P2_INFO.AATSR_ID+1
    '<':DHMI_P2_INFO.AATSR_ID = DHMI_P2_INFO.AATSR_ID-1
  ENDCASE
  IF DHMI_P2_INFO.AATSR_ID LT 0 THEN DHMI_P2_INFO.AATSR_ID = DHMI_P2_INFO.NA_ASENS-1
  IF DHMI_P2_INFO.AATSR_ID EQ DHMI_P2_INFO.NA_ASENS THEN DHMI_P2_INFO.AATSR_ID = 0 

;--------------------------
; UPDATE THE VALUE

  DHMI_P2_INFO.FSCP2_AATSR->SETPROPERTY, VALUE=DHMI_P2_INFO.AVAILABLE_ASENS[DHMI_P2_INFO.AATSR_ID]
  WIDGET_CONTROL, EVENT.TOP, SET_UVALUE=DHMI_P2_INFO, /NO_COPY

END

;**************************************************************************************
;**************************************************************************************

PRO DHMI_PROCESS_2_UPDATE_VGT,EVENT

;--------------------------
; RETRIEVE WIDGET INFORMATION

  WIDGET_CONTROL, EVENT.TOP,  GET_UVALUE=DHMI_P2_INFO, /NO_COPY
  WIDGET_CONTROL, EVENT.ID,   GET_UVALUE=ACTION

;--------------------------
; UPDATE THE ROI FIELD INDEX

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->VGT: UPDATING VGT FIELD'
  CASE ACTION OF
    '>':DHMI_P2_INFO.VGT_ID = DHMI_P2_INFO.VGT_ID+1
    '<':DHMI_P2_INFO.VGT_ID = DHMI_P2_INFO.VGT_ID-1
  ENDCASE
  IF DHMI_P2_INFO.VGT_ID LT 0 THEN DHMI_P2_INFO.VGT_ID = DHMI_P2_INFO.NA_VSENS-1
  IF DHMI_P2_INFO.VGT_ID EQ DHMI_P2_INFO.NA_VSENS THEN DHMI_P2_INFO.VGT_ID = 0 

;--------------------------
; UPDATE THE VALUE

  DHMI_P2_INFO.FSCP2_VGT->SETPROPERTY, VALUE=DHMI_P2_INFO.AVAILABLE_VSENS[DHMI_P2_INFO.VGT_ID]
  WIDGET_CONTROL, EVENT.TOP, SET_UVALUE=DHMI_P2_INFO, /NO_COPY

END

;**************************************************************************************
;**************************************************************************************

PRO DHMI_PROCESS_2_UPDATE_SITE,EVENT

;--------------------------
; RETRIEVE WIDGET INFORMATION

  WIDGET_CONTROL, EVENT.TOP,  GET_UVALUE=DHMI_P2_INFO, /NO_COPY
  WIDGET_CONTROL, EVENT.ID,   GET_UVALUE=ACTION

;--------------------------
; UPDATE THE ROI FIELD INDEX

  IF DHMI_P2_INFO.IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2->SITE: UPDATING SITE FIELD'
  CASE ACTION OF
    '>':DHMI_P2_INFO.SITE_ID = DHMI_P2_INFO.SITE_ID+1
    '<':DHMI_P2_INFO.SITE_ID = DHMI_P2_INFO.SITE_ID-1
  ENDCASE
  IF DHMI_P2_INFO.SITE_ID LT 0 THEN DHMI_P2_INFO.SITE_ID = DHMI_P2_INFO.NA_SITES-1
  IF DHMI_P2_INFO.SITE_ID EQ DHMI_P2_INFO.NA_SITES THEN DHMI_P2_INFO.SITE_ID = 0 

;--------------------------
; UPDATE THE VALUE

  DHMI_P2_INFO.FSCP2_SITE->SETPROPERTY, VALUE=DHMI_P2_INFO.AVAILABLE_SITES[DHMI_P2_INFO.SITE_ID]
  WIDGET_CONTROL, EVENT.TOP, SET_UVALUE=DHMI_P2_INFO, /NO_COPY

END

;**************************************************************************************
;**************************************************************************************

PRO DHMI_PROCESS_2,GROUP_LEADER=GROUP_LEADER,VERBOSE=VERBOSE

COMMON DHMI_DATABASE

;--------------------------
; FIND MAIN DIMITRI FOLDER AND DELIMITER

  IF KEYWORD_SET(VERBOSE) THEN BEGIN
    PRINT,'DHMI_PROCESS_2: STARTING PROCESS 2 HMI ROUTINE'
    IVERBOSE=1
  ENDIF ELSE IVERBOSE=0
  IF STRUPCASE(!VERSION.OS_FAMILY) EQ 'WINDOWS' THEN WIN_FLAG = 1 ELSE WIN_FLAG = 0
  
  DL          = GET_DIMITRI_LOCATION('DL')
  MAIN_OUTPUT = GET_DIMITRI_LOCATION('OUTPUT')
  SBI_FILE    = GET_DIMITRI_LOCATION('BAND_INDEX')
  SSEN_STR    = STRING('SSEN_*_REF_*.DAT')

  IF IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2: READING THE DIMITRI DATABASE'
  CFIG_DATA   = GET_DIMITRI_CONFIGURATION() 

;---------------------------
; DEFINE USABLE STRINGS

  MER_SENSOR  = 'MERIS'
  ATS_SENSOR  = 'AATSR'
  VGT_SENSOR  = 'VEGETATION'
  NA_STR      = 'N/A'

;---------------------------
; GET LIST OF ALL OUTPUT FOLDERS

  IF IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2: SEARCHING FOLDERS FOR FILES'  
  CD,CURRENT=CDIR
  CD,MAIN_OUTPUT
  AVAILABLE_OFOLDERS  = FILE_SEARCH(/TEST_DIRECTORY)
  
  IF AVAILABLE_OFOLDERS[0] EQ '' THEN BEGIN
    PRINT,'DHMI_PROCESS_2: NO FOLDERS OR FILES FOUND'
    RETURN
  ENDIF
  
  NA_OFOLDERS         = N_ELEMENTS(AVAILABLE_OFOLDERS)

;---------------------------
; DEFINE ARRAYS TO HOLD AVAILABLE CONDFIGURATIONS

  AVAILABLE_SITES = MAKE_ARRAY(40,/STRING,VALUE=NA_STR)
  AVAILABLE_MSENS = MAKE_ARRAY(20,/STRING,VALUE=NA_STR) 
  AVAILABLE_ASENS = MAKE_ARRAY(20,/STRING,VALUE=NA_STR)
  AVAILABLE_VSENS = MAKE_ARRAY(20,/STRING,VALUE=NA_STR)

  FOLDER_ID       = 0
  CURRENT_FOLDER  = AVAILABLE_OFOLDERS[FOLDER_ID]
  SSEN_FILES      = FILE_SEARCH(MAIN_OUTPUT+DL+CURRENT_FOLDER+DL,SSEN_STR)
  
  NA_SITES = 1 & NA_MSENS = 1 & NA_ASENS = 1 & NA_VSENS = 1 & SITE_ID = 0
  CURRENT_SITE = AVAILABLE_SITES[SITE_ID]
  IF SSEN_FILES[0] EQ '' THEN GOTO, SKIP_FOLDER_SEARCH
 
  SSEN_SITES = STRARR(N_ELEMENTS(SSEN_FILES))
  SSEN_PVERS = STRARR(N_ELEMENTS(SSEN_FILES))
 
 ;---------------------------
 ; GET LIST OF FOLDERS SITES AND MERIS AND AATSR PROC VERS

  IF IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2: RETRIEVING LIST OF MERIS AND AATSR CONFIGS'   
  FOR II=0,N_ELEMENTS(SSEN_FILES)-1 DO BEGIN
    TEMP = STRSPLIT(SSEN_FILES[II],DL,/EXTRACT)
    TEMP = STRSPLIT(TEMP[N_ELEMENTS(TEMP)-1],'_',/EXTRACT)
    SSEN_SITES[II] = TEMP[1]
    SSEN_PVERS[II] = STRJOIN(TEMP[3:N_ELEMENTS(TEMP)-2],'_') 
  ENDFOR
 
  TSITES        = SSEN_SITES[UNIQ(SSEN_SITES,SORT(SSEN_SITES))]
  NA_SITES      = N_ELEMENTS(TSITES)
  AVAILABLE_SITES[0:NA_SITES-1] = TSITES
  CURRENT_SITE  = TSITES[SITE_ID]

;--------------------------- 
; GET UNIQ MERIS AND AATSR CONFIGS FOR SITE
 
  TNAMES = [STRMID(MER_SENSOR,0,3),STRMID(ATS_SENSOR,0,3)]
  IF IVERBOSE EQ 1 THEN PRINT,'DHMI_PROCESS_2: RETRIEVING UNIQ CONFIGURATIONS'  
  FOR II=0,1 DO BEGIN
  RES = WHERE(SSEN_SITES EQ CURRENT_SITE AND STRMID(SSEN_PVERS,0,3) EQ TNAMES[II],COUNT)
    IF COUNT GT 0 THEN BEGIN
      TSENS = SSEN_PVERS[RES]
      TSENS = TSENS[UNIQ(TSENS,SORT(TSENS))]
    
      CASE II OF
        0:  BEGIN
            NA_MSENS = N_ELEMENTS(TSENS)
            AVAILABLE_MSENS[0:NA_MSENS-1] = TSENS   
            END
        1:  BEGIN
            NA_ASENS = N_ELEMENTS(TSENS)
            AVAILABLE_ASENS[0:NA_ASENS-1] = TSENS    
            END
      ENDCASE
    ENDIF
  ENDFOR

;--------------------------- 
; GET AVAILABLE VEGETATION PROCESSING VERSIONS THROUGH DATABASE 
 
  RES = WHERE(DHMI_DB_DATA.REGION EQ CURRENT_SITE AND DHMI_DB_DATA.SENSOR EQ VGT_SENSOR,COUNT)
  IF COUNT GT 0 THEN BEGIN
    TEMP = DHMI_DB_DATA.PROCESSING_VERSION[RES]
    TEMP = TEMP[UNIQ(TEMP,SORT(TEMP))]
    NA_VSENS = N_ELEMENTS(TEMP)
    AVAILABLE_VSENS[0:NA_VSENS-1] = TEMP
  ENDIF
  
 SKIP_FOLDER_SEARCH:
 
 MERIS_ID = 0
 AATSR_ID = 0
 VGT_ID   = 0
 CURRENT_MERIS  = AVAILABLE_MSENS[MERIS_ID]
 CURRENT_AATSR  = AVAILABLE_ASENS[AATSR_ID] 
 CURRENT_VGT    = AVAILABLE_VSENS[VGT_ID] 
 
 MER_FOLDER_ID      = 0
 CURRENT_MER_FOLDER = AVAILABLE_OFOLDERS[MER_FOLDER_ID]
 ATS_FOLDER_ID      = 0
 CURRENT_ATS_FOLDER = AVAILABLE_OFOLDERS[ATS_FOLDER_ID]
 
;--------------------------
; DEFINE THE MAIN WIDGET 

  IF KEYWORD_SET(VERBOSE) THEN PRINT,'DHMI_PROCESS_2: RETRIEVING SCREEN DIMENSIONS FOR WIDGET'
  DIMS  = GET_SCREEN_SIZE()
  XSIZE = 500 
  YSIZE = 800
  XLOC  = (DIMS[0]/2)-(XSIZE/2)
  YLOC  = (DIMS[1]/2)-(YSIZE/2)
  FIELD_SIZE = 35
  SML_BTN = 80
  SML_FSC_X=7
  DHMI_P2_TLB = WIDGET_BASE(COLUMN=1,TITLE='DIMITRI V3.0: VGT SIM SETUP',XSIZE=XSIZE,$
                                  XOFFSET=XLOC,YOFFSET=YLOC)
  IF NOT KEYWORD_SET(GROUP_LEADER) THEN GROUP_LEADER =DHMI_P2_TLB  

  DHMI_P2_TLB_2 = WIDGET_BASE(DHMI_P2_TLB,ROW=6)
  
  IF WIN_FLAG THEN DHMI_P2_TLB_2_MFID = FSC_FIELD(DHMI_P2_TLB_2,VALUE=CURRENT_MER_FOLDER,TITLE='MERIS FOLDER:',OBJECT=FSCP2_MFOLDER,/NOEDIT,XSIZE=45) $
    ELSE DHMI_P2_TLB_2_MFID = FSC_FIELD(DHMI_P2_TLB_2,VALUE=CURRENT_MER_FOLDER,TITLE='MERIS FOLDER:',OBJECT=FSCP2_MFOLDER,/NOEDIT,XSIZE=45)  
  DHMI_BLK      = WIDGET_BUTTON(DHMI_P2_TLB_2,VALUE='<',UVALUE='<',EVENT_PRO='DHMI_PROCESS_2_UPDATE_MFOLDER')
  DHMI_BLK      = WIDGET_BUTTON(DHMI_P2_TLB_2,VALUE='>',UVALUE='>',EVENT_PRO='DHMI_PROCESS_2_UPDATE_MFOLDER')

  IF WIN_FLAG THEN DHMI_P2_TLB_2_MERISID = FSC_FIELD(DHMI_P2_TLB_2,VALUE=CURRENT_MERIS,TITLE='MERIS CONFIG :',OBJECT=FSCP2_MERIS,/NOEDIT,XSIZE=FIELD_SIZE)  $ 
    ELSE DHMI_P2_TLB_2_MERISID = FSC_FIELD(DHMI_P2_TLB_2,VALUE=CURRENT_MERIS,TITLE='MERIS CONFIG:',OBJECT=FSCP2_MERIS,/NOEDIT,XSIZE=FIELD_SIZE)
  DHMI_BLK      = WIDGET_BUTTON(DHMI_P2_TLB_2,VALUE='<',UVALUE='<',EVENT_PRO='DHMI_PROCESS_2_UPDATE_MERIS')
  DHMI_BLK      = WIDGET_BUTTON(DHMI_P2_TLB_2,VALUE='>',UVALUE='>',EVENT_PRO='DHMI_PROCESS_2_UPDATE_MERIS')

  IF WIN_FLAG THEN DHMI_P2_TLB_2_AFID = FSC_FIELD(DHMI_P2_TLB_2,VALUE=CURRENT_ATS_FOLDER,TITLE='AATSR FOLDER:',OBJECT=FSCP2_AFOLDER,/NOEDIT,XSIZE=45) $  
    ELSE DHMI_P2_TLB_2_AFID = FSC_FIELD(DHMI_P2_TLB_2,VALUE=CURRENT_ATS_FOLDER,TITLE='AATSR FOLDER:',OBJECT=FSCP2_AFOLDER,/NOEDIT,XSIZE=45)
  DHMI_BLK      = WIDGET_BUTTON(DHMI_P2_TLB_2,VALUE='<',UVALUE='<',EVENT_PRO='DHMI_PROCESS_2_UPDATE_AFOLDER')
  DHMI_BLK      = WIDGET_BUTTON(DHMI_P2_TLB_2,VALUE='>',UVALUE='>',EVENT_PRO='DHMI_PROCESS_2_UPDATE_AFOLDER')
  
  IF WIN_FLAG THEN DHMI_P2_TLB_2_AATSRID = FSC_FIELD(DHMI_P2_TLB_2,VALUE=CURRENT_AATSR,TITLE='AATSR CONFIG :',OBJECT=FSCP2_AATSR,/NOEDIT,XSIZE=FIELD_SIZE) $  
    ELSE DHMI_P2_TLB_2_AATSRID = FSC_FIELD(DHMI_P2_TLB_2,VALUE=CURRENT_AATSR,TITLE='AATSR CONFIG:',OBJECT=FSCP2_AATSR,/NOEDIT,XSIZE=FIELD_SIZE) 
  DHMI_BLK      = WIDGET_BUTTON(DHMI_P2_TLB_2,VALUE='<',UVALUE='<',EVENT_PRO='DHMI_PROCESS_2_UPDATE_AATSR')
  DHMI_BLK      = WIDGET_BUTTON(DHMI_P2_TLB_2,VALUE='>',UVALUE='>',EVENT_PRO='DHMI_PROCESS_2_UPDATE_AATSR')
  
  IF WIN_FLAG THEN DHMI_P2_TLB_2_SITEID = FSC_FIELD(DHMI_P2_TLB_2,VALUE=CURRENT_SITE,TITLE='SITE                   :',OBJECT=FSCP2_SITE,/NOEDIT)  $ 
    ELSE DHMI_P2_TLB_2_SITEID = FSC_FIELD(DHMI_P2_TLB_2,VALUE=CURRENT_SITE,TITLE='SITE        :',OBJECT=FSCP2_SITE,/NOEDIT)
  DHMI_BLK      = WIDGET_BUTTON(DHMI_P2_TLB_2,VALUE='<',UVALUE='<',EVENT_PRO='DHMI_PROCESS_2_UPDATE_SITE')
  DHMI_BLK      = WIDGET_BUTTON(DHMI_P2_TLB_2,VALUE='>',UVALUE='>',EVENT_PRO='DHMI_PROCESS_2_UPDATE_SITE')
  
  IF WIN_FLAG THEN DHMI_P2_TLB_2_VGTID = FSC_FIELD(DHMI_P2_TLB_2,VALUE=CURRENT_VGT,TITLE='VGT CONFIG     :',OBJECT=FSCP2_VGT,/NOEDIT)  $ 
    ELSE DHMI_P2_TLB_2_VGTID = FSC_FIELD(DHMI_P2_TLB_2,VALUE=CURRENT_VGT,TITLE='VGT CONFIG  :',OBJECT=FSCP2_VGT,/NOEDIT) 
  DHMI_BLK      = WIDGET_BUTTON(DHMI_P2_TLB_2,VALUE='<',UVALUE='<',EVENT_PRO='DHMI_PROCESS_2_UPDATE_VGT')
  DHMI_BLK      = WIDGET_BUTTON(DHMI_P2_TLB_2,VALUE='>',UVALUE='>',EVENT_PRO='DHMI_PROCESS_2_UPDATE_VGT')

;---------------------------
; ADD WIDGET SECTIONS FOR SECOND SECTION

  DHMI_P2_TLB_3       = WIDGET_BASE(DHMI_P2_TLB,COLUMN=1,FRAME=1)
  DHMI_P2_TLB_3_LBL   = WIDGET_LABEL(DHMI_P2_TLB_3,VALUE=' USER PARAMETERS :',/ALIGN_LEFT) 

  DHMI_P2_TLB_MID     = WIDGET_BASE(DHMI_P2_TLB_3,ROW=1)
  DHMI_P2_TLB_LBL     = WIDGET_LABEL(DHMI_P2_TLB_MID,VALUE='BRDF PLOTS :')
  DHMI_P2_TLB_PLT     = WIDGET_BASE(DHMI_P2_TLB_MID,ROW=1,/EXCLUSIVE)  
  DHMI_P2_TLB_PLT1    = WIDGET_BUTTON(DHMI_P2_TLB_PLT,VALUE='ON',EVENT_PRO='DHMI_PROCESS_2_PLOTS')
  DHMI_P2_TLB_PLT2    = WIDGET_BUTTON(DHMI_P2_TLB_PLT,VALUE='OFF',EVENT_PRO='DHMI_PROCESS_2_PLOTS')

  WIDGET_CONTROL, DHMI_P2_TLB_PLT1, SET_BUTTON=1 
  CURRENT_BUTTON = DHMI_P2_TLB_PLT1

  IF WIN_FLAG THEN DHMI_P2_TLB_BBPID   = FSC_FIELD(DHMI_P2_TLB_3,TITLE='BRDF BIN PERIOD (DAYS)      : ', VALUE=FIX(CFIG_DATA.(1)[10]),OBJECT=FSCP2_BBP) $
    ELSE DHMI_P2_TLB_BBPID   = FSC_FIELD(DHMI_P2_TLB_3,TITLE='BRDF BIN PERIOD (DAYS) : ', VALUE=FIX(CFIG_DATA.(1)[10]),OBJECT=FSCP2_BBP)
  IF WIN_FLAG THEN DHMI_P2_TLB_BALID   = FSC_FIELD(DHMI_P2_TLB_3,TITLE='BRDF OBS. THRESHOLD        : ',       VALUE=FIX(CFIG_DATA.(1)[11]),OBJECT=FSCP2_BAL)   $
    ELSE DHMI_P2_TLB_BALID   = FSC_FIELD(DHMI_P2_TLB_3,TITLE='BRDF OBS. THRESHOLD    : ',       VALUE=FIX(CFIG_DATA.(1)[11]),OBJECT=FSCP2_BAL)  
  
  IF WIN_FLAG THEN DHMI_P2_TLB_CLOUDID = FSC_FIELD(DHMI_P2_TLB_3,TITLE='VGT CLOUD THRESHOLD (%): ',          VALUE=CFIG_DATA.(1)[12],OBJECT=FSCP2_CLOUD) $
    ELSE DHMI_P2_TLB_CLOUDID = FSC_FIELD(DHMI_P2_TLB_3,TITLE='VGT CLOUD THRESHOLD (%): ',          VALUE=CFIG_DATA.(1)[12],OBJECT=FSCP2_CLOUD)
  IF WIN_FLAG THEN DHMI_P2_TLB_ROIID   = FSC_FIELD(DHMI_P2_TLB_3,TITLE='VGT ROI THRESHOLD (%)      : ',      VALUE=CFIG_DATA.(1)[13],OBJECT=FSCP2_ROI) $
    ELSE DHMI_P2_TLB_ROIID   = FSC_FIELD(DHMI_P2_TLB_3,TITLE='VGT ROI THRESHOLD  (%) : ',      VALUE=CFIG_DATA.(1)[13],OBJECT=FSCP2_ROI)
    
;--------------------------
; DEFINE WIDGET FOR ABSOLUTE ANGLE CRITERIA

  DHMI_P2_TLB_4       = WIDGET_BASE(DHMI_P2_TLB,ROW=2,FRAME=1)
  DHMI_P2_TLB_4_LBL   = WIDGET_LABEL(DHMI_P2_TLB_4,VALUE='ABSOLUTE ANGLE CRITERIA:',/ALIGN_LEFT)
  DHMI_P2_TLB_4_FD    = WIDGET_BASE(DHMI_P2_TLB_4,column=1,XSIZE=XSIZE-20)
  DHMI_P2_TLB_4_FD2   = WIDGET_BASE(DHMI_P2_TLB_4_FD,ROW=5,/ALIGN_CENTER)
  
  IF WIN_FLAG THEN STR = '                   MIN              MAX' $
    ELSE STR = '            MIN          MAX'
  
        DHMI_BLK      = WIDGET_LABEL(DHMI_P2_TLB_4_FD2,VALUE=STR,YSIZE=20,/ALIGN_CENTER)
        DHMI_BLK      = WIDGET_LABEL(DHMI_P2_TLB_4_FD2,VALUE='',YSIZE=20,/ALign_center)

        DHMI_P2_TLB_4_VZALID= FSC_FIELD(DHMI_P2_TLB_4_FD2,VALUE=0,OBJECT=FSCP2_VZAMIN,XSIZE=SML_FSC_X,TITLE='VZA  :  ',/align_center)
        DHMI_P2_TLB_4_VZAUID= FSC_FIELD(DHMI_P2_TLB_4_FD2,VALUE=90,OBJECT=FSCP2_VZAMAX,XSIZE=SML_FSC_X,TITLE='',/align_center)

        DHMI_P2_TLB_4_VAALID= FSC_FIELD(DHMI_P2_TLB_4_FD2,VALUE=0,OBJECT=FSCP2_VAAMIN,XSIZE=SML_FSC_X,TITLE='VAA  :  ',/align_center)
        DHMI_P2_TLB_4_VAALID= FSC_FIELD(DHMI_P2_TLB_4_FD2,VALUE=360,OBJECT=FSCP2_VAAMAX,XSIZE=SML_FSC_X,TITLE='',/align_center)
        
        DHMI_P2_TLB_4_SZALID= FSC_FIELD(DHMI_P2_TLB_4_FD2,VALUE=0,OBJECT=FSCP2_SZAMIN,XSIZE=SML_FSC_X,TITLE='SZA  :  ',/align_center)
        DHMI_P2_TLB_4_SZALID= FSC_FIELD(DHMI_P2_TLB_4_FD2,VALUE=90,OBJECT=FSCP2_SZAMAX,XSIZE=SML_FSC_X,TITLE='',/align_center)

        DHMI_P2_TLB_4_SAALID= FSC_FIELD(DHMI_P2_TLB_4_FD2,VALUE=0,OBJECT=FSCP2_SAAMIN,XSIZE=SML_FSC_X,TITLE='SAA  :  ',/align_center)
        DHMI_P2_TLB_4_SAALID= FSC_FIELD(DHMI_P2_TLB_4_FD2,VALUE=360,OBJECT=FSCP2_SAAMAX,XSIZE=SML_FSC_X,TITLE='',/align_center)
    
    
  DHMI_P2_TLB_5       = WIDGET_BASE(DHMI_P2_TLB,ROW=1,/ALIGN_RIGHT)
  DHMI_P2_TLB_5_BTN   = WIDGET_BUTTON(DHMI_P2_TLB_5,VALUE='Start',XSIZE=SML_BTN,EVENT_PRO='DHMI_PROCESS_2_START')
  DHMI_P2_TLB_5_BTN   = WIDGET_BUTTON(DHMI_P2_TLB_5,VALUE='Exit',XSIZE=SML_BTN, EVENT_PRO='DHMI_PROCESS_2_EXIT')
  
  DHMI_P2_INFO = { $
                  IVERBOSE                    : IVERBOSE              ,$
                  MAIN_OUTPUT                 : MAIN_OUTPUT           ,$
                  FSCP2_MFOLDER               : FSCP2_MFOLDER         ,$
                  FSCP2_AFOLDER               : FSCP2_AFOLDER         ,$
                  FSCP2_SITE                  : FSCP2_SITE            ,$
                  FSCP2_MERIS                 : FSCP2_MERIS           ,$
                  FSCP2_AATSR                 : FSCP2_AATSR           ,$
                  FSCP2_VGT                   : FSCP2_VGT             ,$
                  AVAILABLE_OFOLDERS          : AVAILABLE_OFOLDERS    ,$
                  NA_OFOLDERS                 : NA_OFOLDERS           ,$
                  DL                          : DL                    ,$
                  MER_SENSOR                  : MER_SENSOR            ,$
                  ATS_SENSOR                  : ATS_SENSOR            ,$
                  VGT_SENSOR                  : VGT_SENSOR            ,$
                  MER_FOLDER_ID               : MER_FOLDER_ID         ,$
                  CURRENT_MER_FOLDER          : CURRENT_MER_FOLDER    ,$
                  ATS_FOLDER_ID               : ATS_FOLDER_ID         ,$
                  CURRENT_ATS_FOLDER          : CURRENT_ATS_FOLDER    ,$
                  SSEN_STR                    : SSEN_STR              ,$
                  NA_SITES                    : NA_SITES              ,$
                  AVAILABLE_SITES             : AVAILABLE_SITES       ,$
                  NA_MSENS                    : NA_MSENS              ,$
                  NA_ASENS                    : NA_ASENS              ,$
                  NA_VSENS                    : NA_VSENS              ,$
                  SITE_ID                     : SITE_ID               ,$
                  CURRENT_SITE                : CURRENT_SITE          ,$
                  MERIS_ID                    : MERIS_ID              ,$
                  CURRENT_MERIS               : CURRENT_MERIS         ,$
                  AVAILABLE_MSENS             : AVAILABLE_MSENS       ,$
                  AVAILABLE_ASENS             : AVAILABLE_ASENS       ,$
                  AATSR_ID                    : AATSR_ID              ,$
                  CURRENT_AATSR               : CURRENT_AATSR         ,$
                  AVAILABLE_VSENS             : AVAILABLE_VSENS       ,$
                  VGT_ID                      : VGT_ID                ,$
                  CURRENT_VGT                 : CURRENT_VGT           ,$
                  DHMI_P2_TLB_PLT1            : DHMI_P2_TLB_PLT1      ,$  
                  DHMI_P2_TLB_PLT2            : DHMI_P2_TLB_PLT2      ,$  
                  CURRENT_BUTTON              : CURRENT_BUTTON	      ,$
                  NA_STR                      : NA_STR                ,$
                  FSCP2_VZAMIN                : FSCP2_VZAMIN          ,$
                  FSCP2_VZAMAX                : FSCP2_VZAMAX          ,$
                  FSCP2_VAAMIN                : FSCP2_VAAMIN          ,$
                  FSCP2_VAAMAX                : FSCP2_VAAMAX          ,$
                  FSCP2_SZAMIN                : FSCP2_SZAMIN          ,$
                  FSCP2_SZAMAX                : FSCP2_SZAMAX          ,$
                  FSCP2_SAAMIN                : FSCP2_SAAMIN          ,$
                  FSCP2_SAAMAX                : FSCP2_SAAMAX          ,$                  
                  FSCP2_BBP                   : FSCP2_BBP             ,$
                  FSCP2_BAL                   : FSCP2_BAL             ,$
                  FSCP2_CLOUD                 : FSCP2_CLOUD           ,$
                  FSCP2_ROI                   : FSCP2_ROI             $
                  }
  
;--------------------------
; REALISE THE WIDGET AND REGISTER WITH THE XMANAGER

  CD,CDIR
  IF KEYWORD_SET(VERBOSE) THEN PRINT,'DHMI_PROCESS_2: REALISING THE WIDGET AND REGISTERING WITH THE XMANAGER'
  WIDGET_CONTROL,DHMI_P2_TLB,/REALIZE,SET_UVALUE=DHMI_P2_INFO,/NO_COPY,GROUP_LEADER=GROUP_LEADER
  XMANAGER,'DHMI_PROCESS_2',DHMI_P2_TLB

END
