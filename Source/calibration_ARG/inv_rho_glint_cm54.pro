;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*     INV_RHO_GLINT_CM54
;* 
;* PURPOSE:
;*      INVERSE GLINT REFLECTANCE BY COX & MUNK 1954 MODEL TO RETRIEVE WIND SPEED
;*      ISOTROPIC VERSION
;* 
;* CALLING SEQUENCE:
;*      RES = INV_RHO_GLINT_CM54(RHO_G, WIND_IN, RAA, VZA, SZA)
;* 
;* INPUTS:
;*      RHOG     - GLINT REFLECTANCE AT SEA LEVEL
;*      WIND_IN  - INITIAL GUESS FOR WIND SPEED IN M/S.
;*      RAA      - THE RELATIVE AZIMUTH ANGLE IN DEGREES
;*      VZA      - THE VIEWING ZENITH ANGLE IN DEGREES 
;*      SZA      - THE SOLAR ZENITH ANGLE IN DEGREES
;*      WAV      - THE WAVELENGTH IN NM (FOR FRESNEL COEFFICIENT)
;*
;* KEYWORDS:
;*      VERBOSE          - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      WIND_OUT  - RETRIEVED WIND SPEED IN M/S.
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*        01 NOV 2013 - C MAZERAN - FIRST IMPLEMENTATION
;*        20 JAN 2014 - C MAZERAN - UPDATED NEWTON INVERSION AND SPECTRAL WATER REFRACTIVE INDEX
;*
;* VALIDATION HISTORY:
;*        01 NOV 2013 - C MAZERAN - LINUX 64-BIT MACHINE IDL 8.0, NOMINAL COMPILATION AND OPERATION
;*
;**************************************************************************************
;**************************************************************************************
FUNCTION INV_RHO_GLINT_CM54, RHO_G, WIND_IN, RAA, VZA, SZA, WAV
 
;-----------------------------------------
; DEFINE CURRENT FUNCTION NAME

 FCT_NAME = "INV_RHO_GLINT_CM54"

;-----------------------------------------
; CHECK INPUTS CORRESPOND TO
; A ONE-DIMENSIONNAL ARRAY

 S0 = SIZE(RHO_G,/N_DIMENSIONS)
 S1 = SIZE(RAA,/N_DIMENSIONS)
 S2 = SIZE(VZA,/N_DIMENSIONS)
 S3 = SIZE(SZA,/N_DIMENSIONS)
 S  = [S0, S1, S2, S3]

 IF N_ELEMENTS(UNIQ(S(SORT(S)))) NE 1 THEN BEGIN
   PRINT, FCT_NAME+":ERROR, WORKS ONLY FOR 1D ARRAY"
   RETURN, -1
 ENDIF

;-----------------------------------------
; CHECK INPUTS HAVE THE SAME DIMENSION

 N0 = N_ELEMENTS(RHO_G)
 N1 = N_ELEMENTS(RAA)
 N2 = N_ELEMENTS(VZA)
 N3 = N_ELEMENTS(SZA)
 N  = [N0, N1, N2, N3]
 IF N_ELEMENTS(UNIQ(N(SORT(N)))) NE 1 THEN BEGIN
   PRINT, FCT_NAME+":ERROR, INPUTS DON'T HAVE SAME DIMENSION"
   RETURN, -1
 ENDIF

;-----------------------------------------
; COMPUTE GEOMETRICAL QUANTITIES 

 COS2OMEGA = COS(SZA*!DTOR)*COS(VZA*!DTOR)+SIN(SZA*!DTOR)*SIN(VZA*!DTOR)*COS(RAA*!DTOR)
 SUMCOS2   = (COS(SZA*!DTOR)+COS(VZA*!DTOR))^2
 COSBETA4  = (SUMCOS2/(2.+2.*COS2OMEGA))^2

;-----------------------------------------
; COMPUTE FRESNEL COEFFICIENT 

 R=FRESNEL(RAA, VZA, SZA, WAV)

;-----------------------------------------
; FIXED PARAMETER IN THE CM54 MODEL

 A = R/(4.*COS(SZA*!DTOR)*COS(VZA*!DTOR)*COSBETA4)
 B = (2.*(1.+COS2OMEGA)-SUMCOS2)/SUMCOS2
 C0 = 0.003
 C1 = 0.00512

;-----------------------------------------
; LOOP ON ALL PIXELS
 
 WIND_OUT=DBLARR(N0)
 FOR I=0, N0-1 DO BEGIN
   
;-----------------------------------------
; CHECK GLINT IS LOWER THAN MAX POSSIBLE REFLECTANCE 

    W_0=(B[I]-C0)/C1
    RHO_G_MAX=A[I]/(EXP(1.)*B[I]) 
 
    IF RHO_G[I] GT RHO_G_MAX THEN BEGIN
      WIND_OUT[I] = -1.
      CONTINUE
    ENDIF

;-----------------------------------------
; CHECK IF GLINT IS CLOSE TO THE MAX POSSIBLE REFLECTANCE 
; NOTE: THIS AVOIDS ENCOUNTERING ZERO DERIVATIVE IN NEWTON ALGORITHM

    IF ABS(RHO_G[I]-RHO_G_MAX) LT 1.E-6 THEN BEGIN
      WIND_OUT[I]=W_0
      CONTINUE
    ENDIF

;-----------------------------------------
; INVERSE RHOG=A/SIGMA2*EXP(-B/SIGMA2)
; NEWTON-RAPHSON ITERATION STARTING FROM WIND_IN

    Y=-RHO_G[I]*B[I]/A[I]
    
    IF ABS(WIND_IN[I]-W_0) LT 1.E-6 THEN WIND_IN[I]=W_0*0.9

    SIGMA2 = C0 + C1*WIND_IN[I]
    X=-B[I]/SIGMA2
    FOR ITER=0, 3 DO X-=(X*EXP(X)-Y)/(exp(X)*(1.+X))	
    WIND_OUT[I]=(B[I]/(-X)-C0)/C1
    
 ENDFOR

 RETURN, WIND_OUT

END

