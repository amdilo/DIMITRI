;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      GET_SPECTRAL_RESPONSE      
;* 
;* PURPOSE:
;*      RETURNS THE SPECTRAL RESPONSE STRUCTURE 
;* 
;* CALLING SEQUENCE:
;*      RES = GET_SPECTRAL_RESPONSE(SENSOR)      
;* 
;* INPUTS:
;*      SENSOR    - A STRING OF THE SENSOR NAME (E.G. 'MERIS')
;*
;* KEYWORDS:
;*      VERBOSE   - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      SPECTRAL_RESPONSE_STRUCTURE - A STRUCTURE FIELDS
;*                                - WAVELENGTH' :  WAVELENGTH VALUES
;*                                - BAND_01': SPECTRAL RESPONSE OF THE 1st BAND OF THE SELECTED SENSOR
;*                                - BAND_XX : SPECTRAL RESPONSE OF THE Xst BAND OF THE SELECTED SENSOR
;*                                
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*      12 DEC 2014 - NCG / MAGELLIUM   - DIMITRI-3.0 MAG
;*
;* VALIDATION HISTORY:
;*      20 JAN 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL 
;*      30 MAR 2015 - NCG / MAGELLIUM      - WINDOWS 64BIT MACHINE IDL 8.0: COMPILATION AND OPERATION SUCCESSFUL (DIMITRI V4.0) 
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION GET_SPECTRAL_RESPONSE, SENSOR, VERBOSE=VERBOSE

	STATUS_ERROR = GET_DIMITRI_LOCATION('STATUS_ERROR')

;------------------------------------
; DEFINE SENSOR FILE
  
  PATH_SPECTRAL_RESPONSE = GET_DIMITRI_LOCATION('INPUT_AUX_SPECTRAL_RESPONSE',VERBOSE=VERBOSE)  
  AUX_SPECTRAL_RESPONSE_SENSOR_FILE = PATH_SPECTRAL_RESPONSE + 'SPECTRAL_RESPONSE_' + STRUPCASE(SENSOR) + '.dat'
  
  RES = FILE_INFO(AUX_SPECTRAL_RESPONSE_SENSOR_FILE)
  IF RES.EXISTS EQ 0 THEN BEGIN
    IF KEYWORD_SET(VERBOSE) THEN PRINT, 'GET_SPECTRAL_RESPONSE: ERROR, SPECTRAL RESPONSE FILE NOT FOUND'
    RETURN, STATUS_ERROR
  ENDIF

;------------------------------------
; RETRIEVE TEMPLATE AND READ DATA FILE  
  
  SPECTRAL_TEMPLATE = GET_SPECTRAL_RESPONSE_TEMPLATE(SENSOR, VERBOSE=VERBOSE)
  SPECTRAL_DATA = READ_ASCII(AUX_SPECTRAL_RESPONSE_SENSOR_FILE,TEMPLATE=SPECTRAL_TEMPLATE)

  RETURN, TRANSPOSE(SPECTRAL_DATA.SPECTRAL_RESPONSE_TAB)

END


