;**************************************************************************************
;**************************************************************************************
;*
;* NAME:
;*      SBAF       
;* 
;* PURPOSE:
;*      COMPUTE SPECTRAL BAND ADJUSTMENT FACTOR (SBAF) FOR CROSS-CALIBRATION, VALUE + UNCERTAINTY
;*      SBAF VALUE FROM CHANDER ET AL. 2013, IEEE TRANS. GEOSCI. REMOTE SENS., VOL. 51, NO3, PP-1267-1281
;* 
;* CALLING SEQUENCE:
;*      RES = SBAF(REGION,SENSOR1,BID1,S1_DATA,SENSOR2,BID2)      
;* 
;* INPUTS:
;*      REGION             - THE VALIDATION SITE NAME E.G. 'Uyuni'
;*      SENSOR1            - THE NAME OF THE REFERENCE SENSOR FOR INTERCALIBRATION
;*      BID1               - THE BAND ID FOR THE REFENCE SENSOR BAND E.G. 0 = MERIS 412NM
;*      S1_DATA            - 1-D ARRAY OF REFLECTANCE OF REFERENCE SENSOR AT BAND BID1, SELECTED FOR CALIBRATION 
;*      SENSOR2            - THE NAME OF THE 2ND SENSOR FOR INTERCALIBRATION
;*      BID2               - THE BAND ID FOR THE 2ND SENSOR BAND E.G. 0 = MERIS 412NM
;*
;* KEYWORDS:
;*      VERBOSE            - PROCESSING STATUS OUTPUTS
;*
;* OUTPUTS:
;*      [SBAF, BIAS_SBAF, SIGMA_SBAF] - SPECTRAL BAND ADJUSTMENT FACTOR, SYSTEMATIC AND RANDOM RELATIVE UNCERTAINTY 
;*                                      [-1, -1, -1] IS FOR ERROR
;*
;* COMMON BLOCKS:
;*      NONE
;*
;* MODIFICATION HISTORY:
;*        20 FEB 2014 - C MAZERAN  - FIRST IMPLEMENTATION
;*
;* VALIDATION HISTORY:
;*        20 FEB 2014 - C MAZERAN  - LINUX 64-BIT IDL 8.2 NOMINAL COMPILATION AND BEHAVIOUR.
;*
;**************************************************************************************
;**************************************************************************************

FUNCTION SBAF, REGION, SENSOR1, BID1, S1_DATA,SENSOR2, BID2

;-----------------------------------------
; DEFINE DIMITRI RSR DIRECTORY AND TEMPLATE

  RSR_DIR = GET_DIMITRI_LOCATION('RSR')
  RSR_TEMPLATE = GET_DIMITRI_RSR_TEMPLATE()

;-----------------------------------------
; READ REFERENCE SITE TOA SPECTRUM

  SPECTRA_DIR      = GET_DIMITRI_LOCATION('RSR_DIM')
  SPECTRA_TEMPLATE = GET_DIMITRI_SPECTRA_TEMPLATE()
  SPECTRA_FILE     = FILEPATH('TOA_'+REGION+'.txt',ROOT_DIR=SPECTRA_DIR)

  IF NOT FILE_TEST(SPECTRA_FILE) THEN BEGIN
    PRINT, "SBAF: MISSING TOA SPECTRA FILE"
    RETURN, [-1, -1, -1]
  ENDIF

  SPECTRA = READ_ASCII(SPECTRA_FILE,TEMPLATE = SPECTRA_TEMPLATE)

;-----------------------------------------
; LOOP ON BOTH SENSORS

  RHO_BAR = FLTARR(2)
  SIGMA2  = FLTARR(2)
  SENSOR  = [SENSOR1,SENSOR2]
  BAND    = [BID1,BID2]

  FOR ISENS=0, 1 DO BEGIN

;-----------------------------------------
; READ RSR

     RSR_FILE = FILEPATH(ROOT_DIR=RSR_DIR,SUBDIRECTORY=[SENSOR[ISENS]], 'RSR_'+SENSOR[ISENS]+'_BAND_'+STRTRIM(BAND[ISENS],2)+'.txt')
     RSR_DATA = READ_ASCII(RSR_FILE,TEMPLATE = RSR_TEMPLATE)
   
;-----------------------------------------
; INTERPOLATE SITE SPECTRUM AT RSR BAND

     RHO       = INTERPOL(SPECTRA.REFLECTANCE, SPECTRA.WAVELENGTH, RSR_DATA.WAVELENGTH)
     SIGMA_RHO = INTERPOL(SPECTRA.SIGMA, SPECTRA.WAVELENGTH, RSR_DATA.WAVELENGTH)

;-----------------------------------------
; INTEGRATE SPECTRUM AND UNCERTAINTY ON RSR

     RSR_MEAN       = INT_TABULATED(RSR_DATA.WAVELENGTH,RSR_DATA.RESPONSE)
     RHO_BAR[ISENS] = INT_TABULATED(RSR_DATA.WAVELENGTH,RHO*RSR_DATA.RESPONSE)/RSR_MEAN
     SIGMA2[ISENS]  = INT_TABULATED(RSR_DATA.WAVELENGTH,(SIGMA_RHO*RSR_DATA.RESPONSE)^2)/(RSR_MEAN^2)

  ENDFOR

;-----------------------------------------
; RETURN SBAF AND RELATIVE UNCERTAINTY (SYST+RANDOM)

  IF ABS(RHO_BAR[0]) LT 1E-6 OR ABS(RHO_BAR[1]) LT 1.E-6 THEN BEGIN
    PRINT, "SBAF: TOA SPECTRA INTEGRATION TOO SMALL"
    RETURN, [-1, -1, -1]
  ENDIF

  SBAF = RHO_BAR[1]/RHO_BAR[0]
  
  BIAS      = RHO_BAR[0]-MEAN(S1_DATA)
  BIAS_SBAF = ABS(BIAS/RHO_BAR[0]*(1./SBAF-1.))
  
  SIGMA_SBAF = 1./RHO_BAR[0]*SQRT(SIGMA2[0]+SIGMA2[1]/(SBAF*SBAF))

  RETURN, [SBAF, BIAS_SBAF, SIGMA_SBAF]

END

